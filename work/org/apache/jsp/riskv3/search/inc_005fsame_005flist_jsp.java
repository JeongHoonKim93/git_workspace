/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.0.M22
 * Generated at: 2022-08-01 04:22:07 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.riskv3.search;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.ArrayList;
import risk.util.Log;
import risk.util.StringUtil;
import risk.util.ParseRequest;
import risk.search.MetaMgr;
import risk.search.WarningMgr;
import risk.search.DomainKeywordMgr;
import risk.search.MetaBean;

public final class inc_005fsame_005flist_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("risk.search.DomainKeywordMgr");
    _jspx_imports_classes.add("risk.search.MetaBean");
    _jspx_imports_classes.add("risk.util.ParseRequest");
    _jspx_imports_classes.add("risk.util.Log");
    _jspx_imports_classes.add("risk.search.MetaMgr");
    _jspx_imports_classes.add("risk.search.WarningMgr");
    _jspx_imports_classes.add("java.util.ArrayList");
    _jspx_imports_classes.add("risk.util.StringUtil");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;


	//사용자 기본 환경을 조회한다.
    //없으면  NCS기본 유저의 환경을 조회하여 가져온다.

    StringUtil      su = new StringUtil();
    ParseRequest    pr = new ParseRequest(request);
    pr.printParams();

    String sMtPno    = pr.getString("md_pseq");
    String sMtno     = pr.getString("md_seq");
    String mode      = pr.getString("mode", "");
    String nowpage   = pr.getString("nowpage","1");
    String searchMode = pr.getString("searchMode");
    String subMode = pr.getString("subMode", "");
    
    MetaMgr smgr = new MetaMgr();
    WarningMgr wmgr = new WarningMgr();
    DomainKeywordMgr dkmgr = new DomainKeywordMgr();
    boolean bRtnValue = false;

    ArrayList alData = new ArrayList();
	if(subMode.equals("warning_new")) {
		alData = wmgr.getSameList(sMtPno , sMtno ) ;
	} else if(subMode.equals("domain")) {
		alData = dkmgr.getSameList(sMtPno , sMtno ) ;
	} else {
	    alData = smgr.getSameList(sMtPno , sMtno ) ;
	}
    //ArrayList alData = smgr.getSameList( sMtPno , sMtno ) ;
    
    
    String colspan = "";
    if ( searchMode.equals("ALLKEY") ) {
		colspan = "colspan=\"11\"";
		
    } else if ( searchMode.equals("ALLDB") ) {
    	colspan = "colspan=\"9\"";    	        

    }else if(searchMode.equals("DELIDX")){
    	colspan = "colspan=\"11\"";
    }

      out.write(_jspx_char_array_0);
      out.write(_jspx_char_array_1);

if(alData.size() > 0){
	
	String star = "";
	 
	for(int i = 0; i < alData.size(); i++){
		MetaBean mBean = (MetaBean) alData.get(i);
		
	   	//내용 강조
	   	String Html = "";	   	
	   	Html=mBean.getHighrightHtml(200,"0000CC");
	   	
	   	//관리버튼
	   	String managerButton = "";
	   	String freeButton = "";
		if(searchMode.equals("ALLKEY")){
			
			if(mBean.getIssue_check()!=null){
				
				
				star = "";
	        	if(mBean.getS_seq().equals("3555") || mBean.getS_seq().equals("4943")
	        	  || mBean.getMd_site_name().contains("네이버카페") || mBean.getMd_site_name().contains("다음카페")
	        	){
	        		star = "<img src='../../images/search/yellow_star.gif' style='cursor:pointer' onclick=portalSearch('"+mBean.getS_seq()+"','"+java.net.URLEncoder.encode(mBean.getMd_title(),"utf-8")+"','"+mBean.getMd_site_name()+"')>";
	        	}
				
				managerButton ="<img id=\"issue_menu_icon2"+mBean.getMd_seq()+"\" width=\"18\" height=\"17\" ";
				if(mBean.getMd_seq().equals(sMtno)){
					managerButton += "src=\"../../images/search/up_btn_on.gif\">";
				}else{
					//managerButton += "src=\"../../images/search/up_btn_off.gif\">";
					
					
					managerButton ="<img id=\"issue_menu_icon"+mBean.getMd_seq()+"\" width=\"18\" height=\"17\" style=\"cursor:hand;\" ";
					if(mBean.getIssue_check().equals("Y")){
						//managerButton += "src=\"../../images/search/btn_manage_on.gif\" title=\"이슈로 등록된 정보입니다.\">";
						managerButton += "src=\"../../images/search/btn_manage_on.gif\" title=\"이슈로 등록된 정보입니다.\" onclick=\"send_issue('update','"+mBean.getMd_seq()+"');\">";
					}else{
						managerButton += "src=\"../../images/search/btn_manage_off.gif\" title=\"이슈 미등록 정보입니다.\" onclick=\"send_issue('insert','"+mBean.getMd_seq()+"');\">";
					}
					
					
				}	
				
				
				freeButton ="<img id=\"issue_menu_icon3"+mBean.getMd_seq()+"\" width=\"18\" height=\"17\" ";
				if(mBean.getMd_seq().equals(sMtno)){
					freeButton += "src=\"../../images/search/free_btn_off.gif\">";
				}else{
					freeButton += "src=\"../../images/search/free_btn.gif\"  onclick=\"listAlter('" + mBean.getMd_seq() + "', '" + sMtPno + "');\" style=\"cursor:hand;\">";	
				}
				
				
				
				
			}
			
		}
		

      out.write(_jspx_char_array_2);
      out.write(_jspx_char_array_3);
if(mBean.getIssue_check()!=null && !sMtno.equals(mBean.getMd_seq())){ 
      out.write(_jspx_char_array_4);
      out.print(mBean.getMd_seq());
      out.write('"');
      out.write('>');
}
      out.write(_jspx_char_array_5);
      out.print(mBean.getMd_site_name() + "(" + mBean.getSg_name() + ")");
      out.write(_jspx_char_array_6);

								String isStorage = mBean.getIs_storage();
								if(isStorage.equals("N")) {
									isStorage = "";
								} else {
									isStorage = "<img style='vertical-align: middle;' src='../../images/search/icon_folder.gif' style='cursor:pointer'>";
								}
							
      out.write(_jspx_char_array_7);
      out.print(mBean.getMd_type());
      out.write(_jspx_char_array_8);
      out.print(star);
      out.write(_jspx_char_array_9);
      out.print(mBean.getMd_url());
      out.write(_jspx_char_array_10);
      out.print(mBean.getMd_seq());
      out.write(_jspx_char_array_11);
      out.print(i);
      out.write(_jspx_char_array_12);
      out.print(mBean.getHtmlMd_title());
      out.write(_jspx_char_array_13);
 
									String replyCnt =  mBean.getMd_reply_count();
									 if( "0".equals(replyCnt)) {
										replyCnt = "";
									} else {
										replyCnt = "[" + mBean.getMd_reply_count() + "]";
									} 
								
      out.write(_jspx_char_array_14);
      out.print(replyCnt);
      out.write(_jspx_char_array_15);
      out.print(mBean.getMd_seq());
      out.write(_jspx_char_array_16);
      out.print(Html);
      out.write(_jspx_char_array_17);
      out.print(isStorage );
      out.write(_jspx_char_array_18);
      out.print(mBean.getMd_seq());
      out.write(_jspx_char_array_19);
      out.print(managerButton);
      out.write(_jspx_char_array_20);
      out.print(freeButton);
      out.write(_jspx_char_array_21);
      out.print(mBean.getFormatMd_date("MM-dd HH:mm"));
      out.write(_jspx_char_array_22);

	}
}

      out.write(_jspx_char_array_23);
      out.print(sMtPno);
      out.write(_jspx_char_array_24);
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
  static char[] _jspx_char_array_0 = "<div id=\"zzFilter\">\r\n".toCharArray();
  static char[] _jspx_char_array_1 = "<div style=\"width:820px;padding-top:3px\" align=\"left\">\r\n	<!--<img src=\"../../images/search/btn_multi.gif\" onclick=\"send_issue('samemulti');\" style=\"cursor:pointer\"/>-->\r\n</div>\r\n<table width=\"820\" border=\"0\" cellspacing=\"0\" cellpadding=\"0\" style=\"table-layout:fixed;\">\r\n<!--<table width=\"1000\" border=\"1\" cellspacing=\"0\" cellpadding=\"0\">-->\r\n<!--<col width=\"5%\"><col width=\"20%\"><col width=\"50%\"><col width=\"5%\"><col width=\"5%\"><col width=\"15%\">-->\r\n<!-- <col width=\"5%\"><col width=\"15%\"><col width=\"51%\"><col width=\"4%\"><col width=\"5%\"><col width=\"5%\"><col width=\"15%\"> -->\r\n<col width=\"3%\"><col width=\"8%\"><col width=\"38%\"><col width=\"2%\"><col width=\"2%\"><!-- <col width=\"7%\"> --><!-- <col width=\"11%\"> --><!-- <col width=\"3%\"> --><!-- <col width=\"12%\"> -->\r\n<col width=\"3%\"><col width=\"4%\"><col width=\"7%\">\r\n".toCharArray();
  static char[] _jspx_char_array_2 = "<tr bgcolor=\"F2F7FB\">\r\n						<!--↓↓체크박스-->\r\n						".toCharArray();
  static char[] _jspx_char_array_3 = "<td>\r\n							".toCharArray();
  static char[] _jspx_char_array_4 = "<input type=\"checkbox\" name=\"sameChk\" value=\"".toCharArray();
  static char[] _jspx_char_array_5 = "</td>\r\n						<!--↓↓출처-->\r\n						<td style=\"text-overflow:ellipsis;overflow:hidden;white-space:nowrap;\"><font style=\"font-size:11px;\" color=\"#225bd1\">".toCharArray();
  static char[] _jspx_char_array_6 = "</font></td>\r\n						<!--↓↓제목-->\r\n						<td style=\"text-overflow:ellipsis;overflow:hidden;white-space:nowrap;\">\r\n							".toCharArray();
  static char[] _jspx_char_array_7 = "<p class=\"board_01_tit_0".toCharArray();
  static char[] _jspx_char_array_8 = "\"><a>".toCharArray();
  static char[] _jspx_char_array_9 = "</a><a onClick=\"hrefPop('".toCharArray();
  static char[] _jspx_char_array_10 = "');\" onfocus=\"this.blur();\" href=\"javascript:void(0);\" onmouseover=\"showSamelist('".toCharArray();
  static char[] _jspx_char_array_11 = "')\" onmouseout=\"closeSamelist('".toCharArray();
  static char[] _jspx_char_array_12 = "')\">".toCharArray();
  static char[] _jspx_char_array_13 = "</a>\r\n								".toCharArray();
  static char[] _jspx_char_array_14 = "<strong>".toCharArray();
  static char[] _jspx_char_array_15 = "</strong>\r\n							</p>\r\n							<div id=sameContent".toCharArray();
  static char[] _jspx_char_array_16 = " style=\"display:none;width:200px;height:80px;\">\r\n								".toCharArray();
  static char[] _jspx_char_array_17 = "</div>\r\n						</td>\r\n						<!--↓↓보관홤저장여부버튼-->\r\n						<td>\r\n							".toCharArray();
  static char[] _jspx_char_array_18 = "</td> \r\n						<!--↓↓원문보기버튼-->\r\n						<td style=\"text-overflow:ellipsis;overflow:hidden;white-space:nowrap;\">\r\n							<img src=\"../../images/search/icon00.png\" style=\"cursor:pointer\" onclick=\"originalView('".toCharArray();
  static char[] _jspx_char_array_19 = "');\">\r\n						</td>\r\n						<!--↓↓관리버튼-->\r\n						<td>".toCharArray();
  static char[] _jspx_char_array_20 = "</td>\r\n						<!--↓↓유사-->\r\n						<td>".toCharArray();
  static char[] _jspx_char_array_21 = "</td>\r\n						<!--↓↓수집시간-->\r\n						<td>".toCharArray();
  static char[] _jspx_char_array_22 = "</td>\r\n					</tr>\r\n					".toCharArray();
  static char[] _jspx_char_array_23 = "</table>\r\n</div>\r\n<script language=\"javascript\">\r\n<!--	\r\n	parent.fillSameList('".toCharArray();
  static char[] _jspx_char_array_24 = "');\r\n//-->\r\n</script>".toCharArray();
}
