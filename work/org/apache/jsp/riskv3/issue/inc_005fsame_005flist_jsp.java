/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.0.M22
 * Generated at: 2022-07-28 01:51:31 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.riskv3.issue;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import risk.util.ParseRequest;
import risk.issue.IssueMgr;
import risk.issue.IssueDataBean;
import java.util.ArrayList;
import java.net.URLDecoder;
import risk.util.ConfigUtil;

public final class inc_005fsame_005flist_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(1);
    _jspx_dependants.put("/riskv3/issue/../inc/sessioncheck.jsp", Long.valueOf(1658907412822L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("risk.util.ConfigUtil");
    _jspx_imports_classes.add("java.net.URLDecoder");
    _jspx_imports_classes.add("risk.util.ParseRequest");
    _jspx_imports_classes.add("risk.issue.IssueDataBean");
    _jspx_imports_classes.add("risk.issue.IssueMgr");
    _jspx_imports_classes.add("java.util.ArrayList");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
//@ page contentType="text/html; charset=euc-kr"
      out.write("\r\n");
      out.write("\r\n");

    
	String SS_M_NO = (String)session.getAttribute("SS_M_NO")   == null ? "": (String)session.getAttribute("SS_M_NO")  ;
    String SS_M_ID = (String)session.getAttribute("SS_M_ID")   == null ? "": (String)session.getAttribute("SS_M_ID")  ;
    String SS_M_NAME = (String)session.getAttribute("SS_M_NAME") == null ? "": (String)session.getAttribute("SS_M_NAME");
    String SS_MG_NO = (String)session.getAttribute("SS_MG_NO")  == null ? "": (String)session.getAttribute("SS_MG_NO") ;
	String SS_TITLE = (String)session.getAttribute("SS_TITLE")  == null ? "": (String)session.getAttribute("SS_TITLE");
    String SS_URL =   (String)session.getAttribute("SS_URL")    == null ? "": (String)session.getAttribute("SS_URL") ;
    String SS_M_DEPT =   (String)session.getAttribute("SS_M_DEPT")    == null ? "": (String)session.getAttribute("SS_M_DEPT") ;    
    String SS_M_IP =   (String)session.getAttribute("SS_M_IP")    == null ? "": (String)session.getAttribute("SS_M_IP") ;    
    String SS_M_MAIL =   (String)session.getAttribute("SS_M_MAIL")    == null ? "": (String)session.getAttribute("SS_M_MAIL") ;    
	String SS_M_ORGVIEW_USEYN = (String)session.getAttribute("SS_M_ORGVIEW_USEYN")    == null ? "": (String)session.getAttribute("SS_M_ORGVIEW_USEYN") ;    
	String SS_ML_URL = javax.servlet.http.HttpUtils.getRequestURL(request).toString();
	
	String SS_SEARCHDATE = (String)session.getAttribute("SS_SEARCHDATE")    == null ? "": (String)session.getAttribute("SS_SEARCHDATE") ;
	
	
    

	if ((SS_M_ID.equals("")) || !SS_M_IP.equals(request.getRemoteAddr()) ) {
		ConfigUtil cu = new ConfigUtil();
		out.print("<SCRIPT Language=JavaScript>");
		//out.print("window.setTimeout( \" top.document.location = "+cu.getConfig("URL")+"'riskv3/error/sessionerror.jsp' \") ");
		out.print("top.document.location = '"+cu.getConfig("URL")+"risk/sessionerror.jsp'");
        out.print("</SCRIPT>");
    }
	

      out.write('\r');
      out.write('\n');
      out.write('\r');
      out.write('\n');

	String ipAddress = request.getRemoteAddr();
	boolean ipChk = false;
	
	ParseRequest pr = new ParseRequest(request);
    pr.printParams();
    
    String md_pseq    = pr.getString("md_pseq");
    String ic_seq    = pr.getString("ic_seq");
    //String ic_name    = new String(pr.getString("ic_name").getBytes("8859_1"), "UTF-8");
  	//String ic_name    = pr.getString("ic_name");
    String sDateFrom   = pr.getString("sDateFrom");
    String sDateTo     = pr.getString("sDateTo");
    String ir_stime    = pr.getString("ir_stime","16");
    String ir_etime    = pr.getString("ir_etime","16");
    
    String setStime = "";
	String setEtime = "";
	if(ir_stime.equals("24")){
		setStime = "23:59:59";	
	}else{
		setStime = ir_stime + ":00:00";
	}
	if(ir_etime.equals("24")){
		setEtime = "23:59:59";	
	}else{
		setEtime = ir_etime + ":59:59";
	}
	
	IssueMgr imgr = new IssueMgr();
	//ArrayList alData = imgr.getSourceData(md_pseq, ic_seq, sDateFrom, setStime, sDateTo, setEtime);
	ArrayList alData = imgr.getSourceData(md_pseq, sDateFrom, setStime, sDateTo, setEtime);
	
	//원문보기 권한 부여
	if(SS_M_ORGVIEW_USEYN.equals("Y")){
		ipChk = true;
	} 

      out.write("\r\n");
      out.write("<meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\r\n");
      out.write("<div id=\"zzFilter\">\r\n");
      out.write("<!-- <table width=\"820px\" border=\"0\" cellspacing=\"0\" cellpadding=\"0\" style=\"table-layout:fixed;\"> -->\r\n");
      out.write("<table width=\"100%\" border=\"0\" cellspacing=\"0\" cellpadding=\"0\" style=\"table-layout:fixed;\">\r\n");
      out.write("\t<colgroup>\r\n");
      out.write("\t<!-- \t<col width=\"1%\" />\r\n");
      out.write("\t\t<col width=\"3%\" />선택박스\r\n");
      out.write("\t\t<col width=\"17%\" />출처 \r\n");
      out.write("\t\t<col width=\"44%\" />제목\t\t\t\t\t\r\n");
      out.write("\t\t<col width=\"5%\" />원문\r\n");
      out.write("\t\t<col width=\"14%\" />출처구분\t\t\t\t\t\r\n");
      out.write("\t\t<col width=\"12%\" />수집일시\r\n");
      out.write("\t\t<col width=\"5%\" />돋보기  -->\r\n");
      out.write("\t<col width=\"5%\"><col width=\"14%\"><col width=\"40%\"><col width=\"5%\"><col width=\"5%\"><col width=\"7%\"><col width=\"5%\"><col width=\"13%\"><col width=\"7%\"><col width=\"10%\">\r\n");
      out.write("\t\r\n");
      out.write("\t</colgroup>\r\n");

if(alData.size() > 0){
	for(int i = 0; i < alData.size(); i++){
		IssueDataBean idBean = (IssueDataBean)alData.get(i);
		
		//제목 색갈변경하기
		String titleColor = "";
		if(idBean.getMd_seq().equals(idBean.getMd_pseq())){
			titleColor = "<font color='0000CC'/>";
		}else{
			titleColor = "";
		}
		//출처 색갈변경하기
		String sourchColor = "";
		if(idBean.getF_news() != null && idBean.getF_news().equals("Y")){
			sourchColor = "<font color='F41B2F'/>";
		}else{
			sourchColor = "";
		}
		
		String senti = "";
		if(idBean.getId_senti().equals("1")) {
			senti = "긍정"; 
		} else if(idBean.getId_senti().equals("2")) {
			senti = "부정";
		} else {
			senti = "중립";
		}

      out.write("\r\n");
      out.write("\t<tr bgcolor=\"F2F7FB\">\r\n");
      out.write("\t\t");
      out.write("\r\n");
      out.write("\t\t<td><img src=\"../../images/issue/icon.gif\"></td>\r\n");
      out.write("\t\t<td><p style=\"text-overflow:ellipsis;overflow:hidden;white-space:nowrap;\" class=\"board01_category\" title=\"");
      out.print(idBean.getMd_site_name());
      out.write('"');
      out.write('>');
      out.print(idBean.getMd_site_name());
      out.write("</p></td>\r\n");
      out.write("\t\t<td><p style=\"width:300px;text-overflow:ellipsis;overflow:hidden;white-space:nowrap;\" class=\"board_01_tit_0");
      out.print(idBean.getMd_type());
      out.write("\" title=\"");
      out.print(idBean.getId_title());
      out.write("\"><a href=\"javascript:PopIssueDataForm('");
      out.print(idBean.getMd_seq());
      out.write("','N');\">");
      out.print(titleColor);
      out.print(idBean.getId_title());
      out.write("</a></p></td>\r\n");
      out.write("\t\t");
      out.write("\r\n");
      out.write("\t\t<td></td>\r\n");
      out.write("\t\t<td>\r\n");
      out.write("\t\t\t<a onClick=\"hrefPop('");
      out.print(idBean.getId_url());
      out.write("');\" href=\"javascript:void(0);\" ><img src=\"../../images/issue/ico_original.gif\" align=\"absmiddle\" /></a>\r\n");
      out.write("\t\t</td>\r\n");
      out.write("\t\t<td>");
      out.print(sourchColor);
      out.print(idBean.getSg_name());
      out.write("</td>\r\n");
      out.write("\t\t<td>");
      out.print(senti);
      out.write("</td>\r\n");
      out.write("\t\t<td>");
      out.print(idBean.getFormatMd_date("yyyy-MM-dd"));
      out.write("</td>\r\n");
      out.write("\t\t<td>\r\n");
      out.write("\t\t\t<a onClick=\"report_save('E','");
      out.print(idBean.getId_seq());
      out.write('\'');
      out.write(',');
      out.write('\'');
      out.print(idBean.getId_title_replace());
      out.write("');\" title=\"긴급 보고서 저장\" style=\"margin-right: 10px;cursor:pointer;\">\r\n");
      out.write("\t\t\t\t<img src=\"../../images/issue/icon_issue_report_download_off.gif\" />\t\r\n");
      out.write("\t\t\t</a>\r\n");
      out.write("\t\t</td>\r\n");
      out.write("\r\n");
      out.write("\t\t<td>");
      out.print(idBean.getM_name() );
      out.write("</td>\r\n");
      out.write("\t</tr>\r\n");

	}
}

      out.write("\r\n");
      out.write("</table>\r\n");
      out.write("</div>\r\n");
      out.write("<script type=\"text/javascript\" >\r\n");
      out.write("\tparent.fillSameList('");
      out.print(md_pseq);
      out.write("');\r\n");
      out.write("</script>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
