/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.0.M22
 * Generated at: 2022-07-27 07:39:30 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.riskv3.issue;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import risk.util.Log;
import risk.util.StringUtil;
import risk.util.ParseRequest;
import risk.search.userEnvMgr;
import risk.search.userEnvInfo;
import risk.search.GetKGMenu;
import risk.admin.usergroup.UserGroupMgr;
import risk.admin.usergroup.UserGroupSuperBean;
import java.util.ArrayList;
import risk.util.ConfigUtil;

public final class issue_005fleft_005fmenu_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(1);
    _jspx_dependants.put("/riskv3/issue/../inc/sessioncheck.jsp", Long.valueOf(1658907412822L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("risk.search.userEnvInfo");
    _jspx_imports_classes.add("risk.util.ConfigUtil");
    _jspx_imports_classes.add("risk.util.ParseRequest");
    _jspx_imports_classes.add("risk.admin.usergroup.UserGroupSuperBean");
    _jspx_imports_classes.add("risk.util.Log");
    _jspx_imports_classes.add("risk.search.GetKGMenu");
    _jspx_imports_classes.add("risk.search.userEnvMgr");
    _jspx_imports_classes.add("risk.admin.usergroup.UserGroupMgr");
    _jspx_imports_classes.add("risk.util.StringUtil");
    _jspx_imports_classes.add("java.util.ArrayList");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
//@ page contentType="text/html; charset=euc-kr"
      out.write("\r\n");
      out.write("\r\n");

    
	String SS_M_NO = (String)session.getAttribute("SS_M_NO")   == null ? "": (String)session.getAttribute("SS_M_NO")  ;
    String SS_M_ID = (String)session.getAttribute("SS_M_ID")   == null ? "": (String)session.getAttribute("SS_M_ID")  ;
    String SS_M_NAME = (String)session.getAttribute("SS_M_NAME") == null ? "": (String)session.getAttribute("SS_M_NAME");
    String SS_MG_NO = (String)session.getAttribute("SS_MG_NO")  == null ? "": (String)session.getAttribute("SS_MG_NO") ;
	String SS_TITLE = (String)session.getAttribute("SS_TITLE")  == null ? "": (String)session.getAttribute("SS_TITLE");
    String SS_URL =   (String)session.getAttribute("SS_URL")    == null ? "": (String)session.getAttribute("SS_URL") ;
    String SS_M_DEPT =   (String)session.getAttribute("SS_M_DEPT")    == null ? "": (String)session.getAttribute("SS_M_DEPT") ;    
    String SS_M_IP =   (String)session.getAttribute("SS_M_IP")    == null ? "": (String)session.getAttribute("SS_M_IP") ;    
    String SS_M_MAIL =   (String)session.getAttribute("SS_M_MAIL")    == null ? "": (String)session.getAttribute("SS_M_MAIL") ;    
	String SS_M_ORGVIEW_USEYN = (String)session.getAttribute("SS_M_ORGVIEW_USEYN")    == null ? "": (String)session.getAttribute("SS_M_ORGVIEW_USEYN") ;    
	String SS_ML_URL = javax.servlet.http.HttpUtils.getRequestURL(request).toString();
	
	String SS_SEARCHDATE = (String)session.getAttribute("SS_SEARCHDATE")    == null ? "": (String)session.getAttribute("SS_SEARCHDATE") ;
	
	
    

	if ((SS_M_ID.equals("")) || !SS_M_IP.equals(request.getRemoteAddr()) ) {
		ConfigUtil cu = new ConfigUtil();
		out.print("<SCRIPT Language=JavaScript>");
		//out.print("window.setTimeout( \" top.document.location = "+cu.getConfig("URL")+"'riskv3/error/sessionerror.jsp' \") ");
		out.print("top.document.location = '"+cu.getConfig("URL")+"risk/sessionerror.jsp'");
        out.print("</SCRIPT>");
    }
	

      out.write('\r');
      out.write('\n');
      out.write('\r');
      out.write('\n');

	ParseRequest pr = new ParseRequest(request);
	GetKGMenu kg = new GetKGMenu();
	StringUtil su = new StringUtil();
	
	//사용자 기본 환경을 조회한다.
	//없으면  NCS기본 유저의 환경을 조회하여 가져온다.
	userEnvInfo uei = null;
	uei     = (userEnvInfo) session.getAttribute("ENV");
	String sInit = (String)session.getAttribute("INIT");
	//Top메뉴에서 로고나 정보검색 메뉴 클릭시에는 검색조건을 초기화 시킨다.
	if ( sInit != null  && sInit.equals("INIT") ) {
	    userEnvMgr uem = new userEnvMgr();
	    uei = uem.getUserEnv( SS_M_ID );
	    session.removeAttribute("INIT");
	}

	if ( uei.getSearchMode() == null || uei.getSearchMode().equals("") ) {
	    uei.setSearchMode("ALLKEY");
	}
	//지금까지 설정 내역을 세션에 저장
	session.removeAttribute("ENV");
	session.setAttribute("ENV",uei);
	
	//메뉴코드 스트림
    String menus =  uei.getMg_menu();
    String[] arMenu = menus.split(",");
    UserGroupMgr uMgr = new UserGroupMgr();
    ArrayList menuList = uMgr.getSearchYp("2", menus);
    String meunUrl = uMgr.getMenuUrls();
    

      out.write("\r\n");
      out.write("\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<title>");
      out.print(SS_TITLE);
      out.write("</title>\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\r\n");
      out.write("<meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\r\n");
      out.write("<link rel=\"stylesheet\" href=\"../../css/left/base.css\" type=\"text/css\">\r\n");
      out.write("<style type=\"text/css\">\r\n");
      out.write("<!--\r\n");
      out.write("body {\r\n");
      out.write("\tmargin-left: 0px;\r\n");
      out.write("\tmargin-top: 0px;\r\n");
      out.write("\tmargin-right: 0px;\r\n");
      out.write("\tmargin-bottom: 0px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".style2 {FONT-WEIGHT: bold; FONT-SIZE: 12px; COLOR: #0167B2; LINE-HEIGHT: 16px; FONT-FAMILY: \"돋움\"; }\r\n");
      out.write("-->\r\n");
      out.write("</style>\r\n");
      out.write("<script language=\"JavaScript\" type=\"text/JavaScript\">\r\n");
      out.write("<!--\r\n");
      out.write("\r\n");
      out.write("\tvar selectedObj = \"\";\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\tvar links = '");
      out.print(meunUrl);
      out.write("';\r\n");
      out.write("\tvar link = links.split(',');\r\n");
      out.write("\r\n");
      out.write("\t/*\r\n");
      out.write("\tvar link = new Array(\r\n");
      out.write("\t\t\t\"issue_data_list.jsp\"\r\n");
      out.write("\t\t     );\r\n");
      out.write("\t*/\r\n");
      out.write("\t\r\n");
      out.write("\tfunction igList_resize(){\r\n");
      out.write("  \t\tvar ch = document.body.clientHeight;\r\n");
      out.write("  \t\tvar ifmObj = document.all.ifr_menu.style;\r\n");
      out.write("\t\tvar newH = ch - 160;\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t//var newH = 400;\r\n");
      out.write("  \t\tif (newH <100) newH = 100;\r\n");
      out.write("  \t\tifmObj.height = newH;\r\n");
      out.write("  \t}\r\n");
      out.write("\r\n");
      out.write("\tfunction menuClick(obj, sub_obj, img){\r\n");
      out.write("\t\tselectedObj.src = selectedObj.src.replace(\"_on.\",\"_off.\");\r\n");
      out.write("\t\tobj.src = obj.src.replace(\"_off.\",\"_on.\");\r\n");
      out.write("\t\tselectedObj = obj; \t\t\t \r\n");
      out.write("\r\n");
      out.write("\t\tvar no = obj.name.replace(\"img\",\"\");\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t\tvar sub_cnt = Number(document.getElementById(\"sub_cnt\").value);\r\n");
      out.write("\t\tfor(var i = 1; i <= sub_cnt; i++){\r\n");
      out.write("\t\t\tdocument.getElementById(\"td_writer_\" + i).bgColor='#F8F7F7';\t\r\n");
      out.write("\t\t\tdocument.getElementById(\"img_writer_\" + i).src = '../../images/left/icon_01.gif';\r\n");
      out.write("\t\t\tdocument.getElementById(\"span_writer_\" + i).className = '';  \r\n");
      out.write("\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tif(sub_obj != '' && sub_obj >= 0){\r\n");
      out.write("\r\n");
      out.write("\t\t\tdocument.getElementById(\"td_writer_\" + sub_obj).bgColor='#E3EEFD';\t\r\n");
      out.write("\t\t\tdocument.getElementById(\"img_writer_\" + sub_obj).src = '../../images/left/icon_01_on.gif';\r\n");
      out.write("\t\t\tdocument.getElementById(\"span_writer_\" + sub_obj).className = 'style2';\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\ttop.bottomFrame.contentsFrame.document.location = img;\t\r\n");
      out.write("\t\t}else{\r\n");
      out.write("\t\t\ttop.bottomFrame.contentsFrame.document.location = link[Number(no) - 1];\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t\r\n");
      out.write("  \t}\r\n");
      out.write("\t\r\n");
      out.write("\tfunction onMs(obj){\r\n");
      out.write("\t\tobj.src = obj.src.replace(\"_off.\",\"_on.\");\r\n");
      out.write("\t}\r\n");
      out.write("\tfunction outMs(obj){\r\n");
      out.write("\t\tif(selectedObj != obj){\r\n");
      out.write("\t\t\tobj.src = obj.src.replace(\"_on.\",\"_off.\");\r\n");
      out.write("\t\t}\r\n");
      out.write("\t}\r\n");
      out.write("\r\n");
      out.write("//-->\r\n");
      out.write("</script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<table width=\"192\" height=\"100%\" border=\"0\" cellspacing=\"0\" cellpadding=\"0\" align=\"left\" >\r\n");
      out.write("    <tr>\r\n");
      out.write("    \r\n");
      out.write("      <td width=\"192\" height=\"100%\" valign=\"top\"><table width=\"191\" border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\r\n");
      out.write("          <tr>\r\n");
      out.write("            <td><img src=\"../../images/left/left_02_top.gif\" width=\"191\" height=\"41\" /></td>\r\n");
      out.write("          </tr>\r\n");
      out.write("          <tr>\r\n");
      out.write("          \r\n");
      out.write("            <td width=\"192\" height=\"100%\" valign=\"top\" background=\"../../images/left/left_05_bg.gif\"><table width=\"191\" border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\r\n");
      out.write("            ");

            	UserGroupSuperBean.MenuBean mbean = null;
            	UserGroupSuperBean.MenuBean mbean2 = null;
            	ArrayList menuList2 = null;
            	int zpCnt = 0;
            	
            	
            	String keyIdx = "";
            	String  type = "";
            	//for(int i = 0; i < menuList.size(); i++){
            		
            		mbean = (UserGroupSuperBean.MenuBean) menuList.get(0);
            		
            
      out.write("\r\n");
      out.write("                <tr>\r\n");
      out.write("                  <td><img style=\"cursor: pointer; display: ");
      out.print(su.inarray(arMenu, mbean.getMe_seq()) ? "" : "none");
      out.write(";\" src=\"../../images/left/");
      out.print(mbean.getMe_img_off());
      out.write("\" onMouseover=\"onMs(this);\" onmouseout=\"outMs(this);\" onclick=\"menuClick(this,'");
      out.print(type);
      out.write("');\" name=\"img");
      out.print(0+1);
      out.write("\"></td>\r\n");
      out.write("                </tr>\r\n");
      out.write("                \r\n");
      out.write("                ");

                	if(mbean.getMe_zp_cnt() > 0){
                
      out.write("\r\n");
      out.write("                \r\n");
      out.write("               \t\t<tr>\r\n");
      out.write("\t                  <td><table width=\"206\" border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\r\n");
      out.write("\t                    <tr>\r\n");
      out.write("\t                      <td><table width=\"206\" border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\r\n");
      out.write("\t                          <tr>\r\n");
      out.write("\t                            <td width=\"1\" bgcolor=\"DCDCDC\"></td>\r\n");
      out.write("\t                            <td bgcolor=\"#F8F7F7\"><table width=\"204\" border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\r\n");
      out.write("\t                            ");

	                            	menuList2 = uMgr.getSearchZp(mbean.getMe_xp(), mbean.getMe_yp(),"1",menus);
	                            
		                            for(int j = 0; j < menuList2.size(); j++){
		                    			mbean2 = (UserGroupSuperBean.MenuBean) menuList2.get(j);
		                    			zpCnt++;
		                    	
      out.write("\r\n");
      out.write("\t\t                    \t\t<tr>\r\n");
      out.write("\t                                \t<td onclick=\"menuClick(document.img");
      out.print((0+1));
      out.write(',');
      out.print(zpCnt);
      out.write(',');
      out.write('\'');
      out.print(mbean2.getMe_url());
      out.write("');\"  id=\"td_writer_");
      out.print(zpCnt);
      out.write("\" height=\"26\"  style=\"padding:0px 0px 0px 10px; cursor: pointer;\"><img id=\"img_writer_");
      out.print(zpCnt);
      out.write("\" src=\"../../images/left/icon_01.gif\" width=\"5\" height=\"6\" /> <span id=\"span_writer_");
      out.print(zpCnt);
      out.write("\" class=\"\">");
      out.print(mbean2.getMe_name());
      out.write("</span></td>\r\n");
      out.write("\t                              \t</tr>\t\t                    \t\r\n");
      out.write("\t\t                    \t");
			
		                            }
	                            
      out.write("\r\n");
      out.write("\t                           \r\n");
      out.write("\t                            </table></td>\r\n");
      out.write("\t                            <td width=\"1\" bgcolor=\"DCDCDC\"></td>\r\n");
      out.write("\t                          </tr>\r\n");
      out.write("\t                      </table></td>\r\n");
      out.write("\t                    </tr>\r\n");
      out.write("\t\r\n");
      out.write("\t                  </table></td>\r\n");
      out.write("\t                </tr>\r\n");
      out.write("                \r\n");
      out.write("                ");
	
                	//}
                
      out.write("\r\n");
      out.write("                \r\n");
      out.write("                \r\n");
      out.write("            ");
		
            	}
            
      out.write("    \r\n");
      out.write("                  \r\n");
      out.write("            </table></td>\r\n");
      out.write("          </tr>\r\n");
      out.write("      </table></td>\r\n");
      out.write("    </tr>\r\n");
      out.write("</table>\r\n");
      out.write("<input type=\"hidden\" id=\"sub_cnt\" name=\"sub_cnt\" value=\"");
      out.print(zpCnt);
      out.write("\">\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
      out.write("<script>\r\n");
      out.write("\r\n");
      out.write("if (selectedObj==\"\"){\r\n");
      out.write("\tselectedObj=document.all.img1;\r\n");
      out.write("\tselectedObj.src= selectedObj.src.replace(\"_off.\",\"_on.\");\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("</script>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
