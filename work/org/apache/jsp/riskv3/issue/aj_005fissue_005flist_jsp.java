/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.0.M22
 * Generated at: 2022-07-28 01:45:27 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.riskv3.issue;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import risk.util.ConfigUtil;
import risk.util.ParseRequest;
import risk.util.DateUtil;
import risk.util.StringUtil;
import risk.util.PageIndex;
import risk.search.userEnvInfo;
import risk.issue.IssueMgr;
import risk.issue.IssueDataBean;
import java.util.ArrayList;
import java.net.URLDecoder;

public final class aj_005fissue_005flist_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(1);
    _jspx_dependants.put("/riskv3/issue/../inc/sessioncheck.jsp", Long.valueOf(1658907412822L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("risk.search.userEnvInfo");
    _jspx_imports_classes.add("risk.util.PageIndex");
    _jspx_imports_classes.add("risk.util.ConfigUtil");
    _jspx_imports_classes.add("java.net.URLDecoder");
    _jspx_imports_classes.add("risk.util.ParseRequest");
    _jspx_imports_classes.add("risk.issue.IssueDataBean");
    _jspx_imports_classes.add("risk.issue.IssueMgr");
    _jspx_imports_classes.add("risk.util.DateUtil");
    _jspx_imports_classes.add("risk.util.StringUtil");
    _jspx_imports_classes.add("java.util.ArrayList");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=utf-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write('\r');
      out.write('\n');
//@ page contentType="text/html; charset=euc-kr"
      out.write("\r\n");
      out.write("\r\n");

    
	String SS_M_NO = (String)session.getAttribute("SS_M_NO")   == null ? "": (String)session.getAttribute("SS_M_NO")  ;
    String SS_M_ID = (String)session.getAttribute("SS_M_ID")   == null ? "": (String)session.getAttribute("SS_M_ID")  ;
    String SS_M_NAME = (String)session.getAttribute("SS_M_NAME") == null ? "": (String)session.getAttribute("SS_M_NAME");
    String SS_MG_NO = (String)session.getAttribute("SS_MG_NO")  == null ? "": (String)session.getAttribute("SS_MG_NO") ;
	String SS_TITLE = (String)session.getAttribute("SS_TITLE")  == null ? "": (String)session.getAttribute("SS_TITLE");
    String SS_URL =   (String)session.getAttribute("SS_URL")    == null ? "": (String)session.getAttribute("SS_URL") ;
    String SS_M_DEPT =   (String)session.getAttribute("SS_M_DEPT")    == null ? "": (String)session.getAttribute("SS_M_DEPT") ;    
    String SS_M_IP =   (String)session.getAttribute("SS_M_IP")    == null ? "": (String)session.getAttribute("SS_M_IP") ;    
    String SS_M_MAIL =   (String)session.getAttribute("SS_M_MAIL")    == null ? "": (String)session.getAttribute("SS_M_MAIL") ;    
	String SS_M_ORGVIEW_USEYN = (String)session.getAttribute("SS_M_ORGVIEW_USEYN")    == null ? "": (String)session.getAttribute("SS_M_ORGVIEW_USEYN") ;    
	String SS_ML_URL = javax.servlet.http.HttpUtils.getRequestURL(request).toString();
	
	String SS_SEARCHDATE = (String)session.getAttribute("SS_SEARCHDATE")    == null ? "": (String)session.getAttribute("SS_SEARCHDATE") ;
	
	
    

	if ((SS_M_ID.equals("")) || !SS_M_IP.equals(request.getRemoteAddr()) ) {
		ConfigUtil cu = new ConfigUtil();
		out.print("<SCRIPT Language=JavaScript>");
		//out.print("window.setTimeout( \" top.document.location = "+cu.getConfig("URL")+"'riskv3/error/sessionerror.jsp' \") ");
		out.print("top.document.location = '"+cu.getConfig("URL")+"risk/sessionerror.jsp'");
        out.print("</SCRIPT>");
    }
	

      out.write('\r');
      out.write('\n');
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");

	ParseRequest pr = new ParseRequest(request);
	pr.printParams();
	
	String sDateFrom = pr.getString("param_sDate");
	String sDateTo = pr.getString("param_eDate");
	String ir_stime = pr.getString("param_sTime", "16");
	String ir_etime = pr.getString("param_eTime", "15");
	
	String typeCodeSeries = pr.getString("typeCodeSelect");
	String cloutSeries = pr.getString("typeCodeClout");
	String sentiSeries = pr.getString("typeCodeSenti");
	String transSeries = pr.getString("typeTransyn");
	String infoSeries = pr.getString("typeCodeInfo");
	String relationKeywordSeries = pr.getString("relationKeyword");
	String register = pr.getString("register");
	String searchKeyword = URLDecoder.decode(pr.getString("param_searchKey"), "UTF-8");
	String searchKeyType = pr.getString("param_keyType");
	String sltSiteGroups = pr.getString("sltSiteGroups","");
	
	int nowpage = pr.getInt("nowpage", 1);
	int pageCnt = 20;
	String sOrder       = pr.getString("sOrder","MD_DATE");
	String sOrderAlign  = pr.getString("sOrderAlign","DESC"); 
	
	//세션정보 가져오기~~
	userEnvInfo uei = null;
	uei = (userEnvInfo) session.getAttribute("ENV");
	
	// 데이터 정렬
	uei.setOrder( sOrder );
	uei.setOrderAlign( sOrderAlign );
	
	/**
	 * 필드별 정렬
	 */
	String sOrderImg    = "";
	String sOrderMark1 = "";
	String sOrderMark2 = "";
	String sOrderMark3 = "";
	String sOrderMark4 = "";
	String sOrderMark5 = "";
	
	if ( uei.getOrderAlign().equals("ASC") ) {
	    sOrderImg = "▲";
	} else if( uei.getOrderAlign().equals("DESC" ) ) {
	    sOrderImg = "▼";
	}  
	
	if(uei.getOrder()!=null){
	    if ( uei.getOrder().equals("MD_SITE_NAME") ) {
	        sOrderMark1 = sOrderImg;
	    } else if ( uei.getOrder().equals("ID_TITLE") )     {
	        sOrderMark2 = sOrderImg;
	    } else if ( uei.getOrder().equals("MD_SAME_CT") )   {
	        sOrderMark3 = sOrderImg;
	    } else if ( uei.getOrder().equals("MD_DATE") )      {
	        sOrderMark4 = sOrderImg;
	    } else if ( uei.getOrder().equals("M_NAME") )      {
	        sOrderMark5 = sOrderImg;
	    }
	}
	
	//검색날짜 설정 : 기본 7일간 검색한다.
	DateUtil du = new DateUtil();
	String sCurrDate    = du.getCurrentDate();
	if (sDateTo.equals("")) sDateTo = du.getCurrentDate();
	if (sDateFrom.equals("")) {
		du.addDay(-1);
		sDateFrom = du.getDate();
	}	
	
	String setStime = "";
	String setEtime = "";
	if(ir_stime.equals("24")){
		setStime = "23:59:59";	
	}else{
		setStime = ir_stime + ":00:00";
	}
	if(ir_etime.equals("24")){
		setEtime = "23:59:59";	
	}else{
		setEtime = ir_etime + ":59:59";
	}
	
	IssueMgr issueMgr = new IssueMgr();
	ArrayList issueDataList = issueMgr.searchIssueData(nowpage, pageCnt, sDateFrom, setStime, sDateTo, setEtime, typeCodeSeries, cloutSeries, sentiSeries, infoSeries, relationKeywordSeries
			, searchKeyType, searchKeyword, register, uei.getOrder(), uei.getOrderAlign(), sltSiteGroups, transSeries);
	
	// COUNT 및 Paging
	int totalCnt =  issueMgr.getTotalIssueDataCnt();
	int sameCnt = issueMgr.getTotalSameDataCnt();
	int totalPage = totalCnt / pageCnt;
	if(totalCnt % pageCnt > 0){
		totalPage += 1;
	}
	
	String pageHtml = PageIndex.getPageIndex(nowpage, totalPage,"","" ).replaceAll("'", "\\\\'");
	
	boolean ipChk = false;
	//원문보기 권한 부여
	if(SS_M_ORGVIEW_USEYN.equals("Y")){
		ipChk = true;
	} 
	
	// 사이트그룹(분류체계 기반)
	//ArrayList arrSiteGroup = issueMgr.getSiteGroup_order();
	ArrayList arrSiteGroup = issueMgr.getSiteGroup_order3();
	
	String srtMsg = "<img src=\"../../images/search/icon_search_bullet.gif\">  유사 포함 : <b>"+sameCnt+" 건</b>,  유사 미포함 : <b>"+totalCnt+" 건</b>,  "+nowpage+"/"+totalPage+" pages";

      out.write("\r\n");
      out.write("<colgroup>\r\n");
      out.write("\t<col width=\"5%\"><col width=\"14%\"><col width= \"40%\"><col width=\"5%\"><col width=\"5%\"><col width=\"5%\"><col width=\"5%\"><col width=\"13%\"><col width=\"7%\"><!-- <col width=\"11%\"> --><col width=\"10%\">\r\n");
      out.write("</colgroup>\r\n");
      out.write("<tr>\r\n");
      out.write("\t<th><input type=\"checkbox\" name=\"id_seqs_all\" id=\"id_seqs_all\" onclick=\"checkSeq(this, 2);\" value=\"\"></th>\r\n");
      out.write("\t<th style=\"cursor:pointer\" onclick=\"setOrder('MD_SITE_NAME');\">출처");
      out.print(sOrderMark1);
      out.write("</th>\r\n");
      out.write("\t<th style=\"cursor:pointer\" onclick=\"setOrder('ID_TITLE');\">제목");
      out.print(sOrderMark2);
      out.write("</th>\r\n");
      out.write("\t<th> </th>\r\n");
      out.write("\t<th> </th>\r\n");
      out.write("\t<th style=\"cursor:pointer\" onclick=\"setOrder('MD_SAME_CT');\" title=\"\">유사");
      out.print(sOrderMark3);
      out.write("</th>\r\n");
      out.write("\t<th>성향</th>\r\n");
      out.write("\t<th style=\"cursor:pointer\" onclick=\"setOrder('MD_DATE');\">수집일시");
      out.print(sOrderMark4);
      out.write("</th>\r\n");
      out.write("\t<th>긴급<br>보고서</th>\r\n");
      out.write("\t<th style=\"cursor:pointer\" onclick=\"setOrder('M_NAME');\">등록자");
      out.print(sOrderMark5);
      out.write("</th>\r\n");
      out.write("\t<!-- <th>중요도</th> -->\r\n");
      out.write("</tr>\r\n");

	IssueDataBean idBean = null;
	int SitesValue_sum = 0; //2020.08 수정
	for(int i=0; i  < issueDataList.size(); i++){
		idBean = (IssueDataBean)issueDataList.get(i);
		
		// 사이트별 유사 건수
		String strSites = "";
		String strSitesValue = "";
		SitesValue_sum = 0; //2020.08 수정
		String[] ar_SiteCnt = idBean.getMd_same_ct().split(",");
		String[] ar_SiteCnt_check = idBean.getMd_same_ct_check().split(",");
		String siteCheck = "";
		
		if(arrSiteGroup.size() == ar_SiteCnt.length){
			for(int j = 0; j < arrSiteGroup.size(); j++){
				
				if(ar_SiteCnt_check[j].equals("0")){
		 			siteCheck = ar_SiteCnt[j];
 				}else{
 					siteCheck = "<font color='#F41B2F'/>"+ar_SiteCnt[j]+"</font>";
 				}
				SitesValue_sum += Integer.parseInt(ar_SiteCnt[j]);
				 if(strSites.equals("")){
		 			strSites = ((String[])arrSiteGroup.get(j))[1] + " : " +  ar_SiteCnt[j];
		 			/* if(ar_SiteCnt[j].equals("0")){
		 				strSitesValue = ar_SiteCnt[j];
		 			}else{
		 				strSitesValue = "<a href=\"javascript:getSourceData('"+ idBean.getMd_pseq() +"','"+((String[])arrSiteGroup.get(j))[0]+"','"+ ((String[])arrSiteGroup.get(j))[1] +"')\">"+ siteCheck + "</a>";
		 			}  */
		 			
		 		}else{
		 			strSites += ", " + ((String[])arrSiteGroup.get(j))[1] + " : " +  ar_SiteCnt[j];
		 			/* if(ar_SiteCnt[j].equals("0")){
		 				strSitesValue += "," + ar_SiteCnt[j];
		 			}else{
		 				strSitesValue += "," + "<a href=\"javascript:getSourceData('"+ idBean.getMd_pseq() +"','"+((String[])arrSiteGroup.get(j))[0]+"','"+ ((String[])arrSiteGroup.get(j))[1] +"')\">" + siteCheck +"</a>";
		 			} */
		 		} 
			}
		
			strSitesValue = "<a href=\"javascript:getSourceData('"+ idBean.getMd_pseq() +"')\">"+ SitesValue_sum + "</a>"; 
		}
		
		
		String linkIssueReport = "";
		String linkOnlineIssueReport = "";
		
		if(idBean.getTemp1().equals("1")){
			linkIssueReport = "icon_issue_report_download_on.gif";
		}else{
			linkIssueReport = "icon_issue_report_download_off.gif";
		}
		if(idBean.getTemp2().equals("1")){
			linkOnlineIssueReport = "icon_online_issue_report_download_on.gif";
		}else{
			linkOnlineIssueReport = "icon_online_issue_report_download_off.gif";
		}
		
		String senti = "";
		if(idBean.getId_senti().equals("1")) {
			senti = "긍정";
		} else if(idBean.getId_senti().equals("2")) {
			senti = "부정";
		} else {
			senti = "중립";
		}

      out.write("\r\n");
      out.write("<tr>\r\n");
      out.write("\t<td><input name=\"id_seqs\" type=\"checkbox\" value=\"");
      out.print(idBean.getId_seq());
      out.write("\" onclick=\"checkSeq(this)\"/></td>\r\n");
      out.write("\t<td><span style=\"text-overflow:ellipsis;overflow:hidden;white-space:nowrap;\" class=\"board01_category\" title=\"");
      out.print(idBean.getMd_site_name());
      out.write('"');
      out.write('>');
      out.print(idBean.getMd_site_name());
      out.write("</span></td>\r\n");
      out.write("\t<td style=\"text-align: left;\"><div style=\"width:310px;text-overflow:ellipsis;overflow:hidden;white-space:nowrap;\" class=\"board_01_tit_0");
      out.print(idBean.getMd_type());
      out.write("\" title=\"");
      out.print(idBean.getId_title());
      out.write("\">\r\n");
      out.write("\t\t<a href=\"javascript:PopIssueDataForm('");
      out.print(idBean.getMd_seq() );
      out.write("','Y');\">");
      out.print(idBean.getId_title());
      out.write("</a>\r\n");
      out.write("\t</div></td>\r\n");
      out.write("\t");
      out.write("\r\n");
      out.write("\t <td id=\"checkImg\">");
if(idBean.getId_trans_useyn() != null && idBean.getId_trans_useyn().equals("Y")){
      out.write("<img src=\"../../images/issue/icon_c.gif\">");
}
      out.write("</td> \r\n");
      out.write("\t<td><a onClick=\"hrefPop('");
      out.print(idBean.getId_url());
      out.write("');\" href=\"javascript:void(0);\" ><img src=\"../../images/issue/ico_original.gif\" /></a></td>\r\n");
      out.write("\t<td title=\"");
      out.print(strSites);
      out.write('"');
      out.write('>');
      out.write(' ');
if(0==SitesValue_sum){out.println(SitesValue_sum);}else{out.println(strSitesValue);}
      out.write(" </td>\r\n");
      out.write("\t<td>");
      out.print(senti);
      out.write("</td>\r\n");
      out.write("\t<td>");
      out.print(idBean.getFormatMd_date("yyyy-MM-dd"));
      out.write("</td>\r\n");
      out.write("\t<td >\r\n");
      out.write("\t");

		if(idBean.getTemp1().equals("1")){
	
      out.write("\r\n");
      out.write("\t\t<img src=\"../../images/issue/icon_issue_report_download_on.gif\" title=\"이미 긴급 보고서에 저장되었습니다.\"/>\r\n");
      out.write("\t\r\n");
      out.write("\t");
		
		}else {
	
      out.write("\r\n");
      out.write("\t\t<a onClick=\"report_save('U','");
      out.print(idBean.getId_seq());
      out.write('\'');
      out.write(',');
      out.write('\'');
      out.print(idBean.getId_title_replace());
      out.write("');\" title=\"긴급 보고서 저장\" style=\"cursor:pointer;\">\r\n");
      out.write("\t\t\t<img src=\"../../images/issue/icon_issue_report_download_off.gif\" />\r\n");
      out.write("\t\t</a>\r\n");
      out.write("\t");
 
		}
	
      out.write("\r\n");
      out.write("\t</td>\r\n");
      out.write("\t");
      out.write("\r\n");
      out.write("\t<td>");
      out.print(idBean.getM_name() );
      out.write("</td>\r\n");
      out.write("</tr>\r\n");
      out.write("<tr>\r\n");
      out.write("\t<td class=\"same\" colspan=\"10\">\r\n");
      out.write("\t\t<div id=\"SameList_");
      out.print(idBean.getMd_pseq());
      out.write("\" style=\"display:none;\"></div>\r\n");
      out.write("\t</td>\r\n");
      out.write("</tr>\r\n");

	}

      out.write("\r\n");
      out.write("\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("\t$(\"#count_td\").html('");
      out.print(srtMsg);
      out.write("');\r\n");
      out.write("\t$(\"#paging tr:first\").html('");
      out.print(pageHtml);
      out.write("');\r\n");
      out.write("\t$(\"#nowpage\").val('");
      out.print(nowpage);
      out.write("');\r\n");
      out.write("\t\r\n");
      out.write("\tfunction checkSeq(obj, mode){\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tvar check_status;\r\n");
      out.write("\t\tif($(obj).attr(\"id\") == \"id_seqs_all\"){\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\tif($(obj).attr(\"checked\") == true){\r\n");
      out.write("\t\t\t\tcheck_status = true;\r\n");
      out.write("\t\t\t} else {\r\n");
      out.write("\t\t\t\tcheck_status = false;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t// 전체선택 버튼\r\n");
      out.write("\t\t\tif(mode == 1){\r\n");
      out.write("\t\t\t\tcheck_status = !check_status;\r\n");
      out.write("\t\t\t\t$(obj).attr(\"checked\", check_status);\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t$(\"[name=id_seqs]\").each(function(){\r\n");
      out.write("\t\t\t\t$(this).attr(\"checked\", check_status);\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\t} else {\r\n");
      out.write("\t\t\tif($(obj).attr(\"checked\") == false){\r\n");
      out.write("\t\t\t\t$(\"#id_seqs_all\").attr(\"checked\", false);\r\n");
      out.write("\t\t\t} else {\r\n");
      out.write("\t\t\t\tcheck_status = false;\r\n");
      out.write("\t\t\t\t$(\"[name=id_seqs]\").each(function(){\r\n");
      out.write("\t\t\t\t\tif($(this).attr(\"checked\") == false){\r\n");
      out.write("\t\t\t\t\t\tcheck_status = false;\r\n");
      out.write("\t\t\t\t\t\treturn false;\r\n");
      out.write("\t\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\t\tcheck_status = true;\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t});\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\t$(\"#id_seqs_all\").attr(\"checked\", check_status);\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t}\r\n");
      out.write("\t}\r\n");
      out.write("\r\n");
      out.write("</script>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
