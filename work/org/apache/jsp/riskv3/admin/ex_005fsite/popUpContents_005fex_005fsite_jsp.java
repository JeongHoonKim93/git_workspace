/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.0.M22
 * Generated at: 2022-05-24 07:50:35 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.riskv3.admin.ex_005fsite;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.ArrayList;
import risk.admin.ex_site.ExSiteMng;
import risk.util.ParseRequest;

public final class popUpContents_005fex_005fsite_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("risk.admin.ex_site.ExSiteMng");
    _jspx_imports_classes.add("risk.util.ParseRequest");
    _jspx_imports_classes.add("java.util.ArrayList");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;


	System.out.println("■-------------popUpContents_ex_site.jsp----------------■");
	ParseRequest pr = new ParseRequest(request);
	pr.printParams();
	
	String CheckGroup = pr.getString("selectGroup"); // 'S' 나 'SG' 를 받아옴.
	String sg_seq = pr.getString("sg_seq","");
	String s_seq = pr.getString("s_seq","");
	String mode = pr.getString("mode","");
	
	System.out.println("CheckGroup : "+ CheckGroup);
	ExSiteMng eSMng = new ExSiteMng();
	ArrayList arSgSiteList = new ArrayList(); 
	ArrayList arSSiteList  = new ArrayList();
	
	
	//DB 쿼리
	if(CheckGroup.equals("SG")){
		arSgSiteList = eSMng.getSgSitetList();
	}else if(CheckGroup.equals("S") || CheckGroup.equals("site_URL")){
		arSSiteList = eSMng.getSitetList(sg_seq, s_seq, mode);	
	}
	


if(CheckGroup.equals("SG")){//SG 일때
	

      out.write(_jspx_char_array_0);
      out.print(CheckGroup);
      out.write(_jspx_char_array_1);
      out.print(CheckGroup);
      out.write(_jspx_char_array_2);
	
   String sgTmp[];
   	for (int i=0 ; i < arSgSiteList.size() ; i++){
   		sgTmp = new String[3];
   		sgTmp = (String[])arSgSiteList.get(i);
   
      out.write(_jspx_char_array_3);
      out.print(sgTmp[0] );
      out.write(_jspx_char_array_4);
      out.print(sgTmp[0]);
      out.write('"');
      out.write('>');
      out.print(sgTmp[1]);
      out.write(_jspx_char_array_5);

   		sgTmp = null;
	}	
   
      out.write(_jspx_char_array_6);

}else if(CheckGroup.equals("S")){//S 일때


      out.write(_jspx_char_array_7);
      out.print(CheckGroup);
      out.write(_jspx_char_array_1);
      out.print(CheckGroup);
      out.write(_jspx_char_array_8);
	
   String sTmp[];
   	for (int i=0 ; i < arSSiteList.size() ; i++){
   		sTmp = new String[5];
   		sTmp = (String[])arSSiteList.get(i);
   
      out.write(_jspx_char_array_9);
      out.print(sTmp[1]);
      out.write('"');
      out.write('>');
      out.print(sTmp[2]);
      out.write(_jspx_char_array_5);

   		sTmp = null;
	}	
   
      out.write(_jspx_char_array_6);

}else if(CheckGroup.equals("site_URL")){
	String urlTmp[] = new String[5];
	if(arSSiteList.size() > 0 ){
		urlTmp= (String[])arSSiteList.get(0);

      out.write(_jspx_char_array_10);
      out.print(urlTmp[3] );
      out.write(_jspx_char_array_11);
      out.write(_jspx_char_array_12);

	}
}

    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
  static char[] _jspx_char_array_0 = "<select style=\"width: 70px\" name=\"".toCharArray();
  static char[] _jspx_char_array_1 = "_SITE\" id=\"".toCharArray();
  static char[] _jspx_char_array_2 = "_SITE\" onchange=\"selectSite(name, value)\">\r\n   ".toCharArray();
  static char[] _jspx_char_array_3 = "<option title=\"".toCharArray();
  static char[] _jspx_char_array_4 = "\" value=\"".toCharArray();
  static char[] _jspx_char_array_5 = "</option>\r\n   ".toCharArray();
  static char[] _jspx_char_array_6 = "</select>\r\n\r\n".toCharArray();
  static char[] _jspx_char_array_7 = "<select style=\"width: 100px;\" name=\"".toCharArray();
  static char[] _jspx_char_array_8 = "_SITE\" onchange=\"selectSite(name, value)\" >\r\n   ".toCharArray();
  static char[] _jspx_char_array_9 = "<option value=\"".toCharArray();
  static char[] _jspx_char_array_10 = "<table style=\"width:100%;\" border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\r\n	<tr>\r\n		<td width=\"23%\" ><strong>사이트 URL</strong></td>\r\n		<td colspan=\"2\" id=\"siteUrl\" style=\"text-align: left\">".toCharArray();
  static char[] _jspx_char_array_11 = "</td>\r\n	</tr>\r\n	".toCharArray();
  static char[] _jspx_char_array_12 = "<tr>\r\n		<td width=\"23%\" style=\"padding: 3px 0px 0px 3px;\" valign=\"top\"><strong>제외 URL</strong></td>\r\n		<td colspan=\"4\"><textarea style=\"width: 100%;height: 100px;\" id=\"text_include\" style=\"text-align: left\"></textarea></td>\r\n	</tr>\r\n</table>\r\n\r\n".toCharArray();
}
