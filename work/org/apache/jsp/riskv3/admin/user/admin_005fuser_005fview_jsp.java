/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.0.M22
 * Generated at: 2022-07-27 07:51:24 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.riskv3.admin.user;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import org.apache.poi.util.SystemOutLogger;
import risk.admin.member.MemberDao;
import risk.admin.member.MemberBean;
import risk.admin.member.MemberGroupBean;
import risk.util.ParseRequest;
import risk.util.ConfigUtil;
import java.sql.Timestamp;
import java.util.*;
import java.lang.*;
import risk.util.ConfigUtil;

public final class admin_005fuser_005fview_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(1);
    _jspx_dependants.put("/riskv3/admin/user/../../inc/sessioncheck.jsp", Long.valueOf(1658907412822L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("java.util");
    _jspx_imports_packages.add("java.lang");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("org.apache.poi.util.SystemOutLogger");
    _jspx_imports_classes.add("risk.admin.member.MemberDao");
    _jspx_imports_classes.add("risk.util.ConfigUtil");
    _jspx_imports_classes.add("risk.admin.member.MemberBean");
    _jspx_imports_classes.add("risk.util.ParseRequest");
    _jspx_imports_classes.add("java.sql.Timestamp");
    _jspx_imports_classes.add("risk.admin.member.MemberGroupBean");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=utf-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\n");
//@ page contentType="text/html; charset=euc-kr"
      out.write("\r\n");
      out.write("\r\n");

    
	String SS_M_NO = (String)session.getAttribute("SS_M_NO")   == null ? "": (String)session.getAttribute("SS_M_NO")  ;
    String SS_M_ID = (String)session.getAttribute("SS_M_ID")   == null ? "": (String)session.getAttribute("SS_M_ID")  ;
    String SS_M_NAME = (String)session.getAttribute("SS_M_NAME") == null ? "": (String)session.getAttribute("SS_M_NAME");
    String SS_MG_NO = (String)session.getAttribute("SS_MG_NO")  == null ? "": (String)session.getAttribute("SS_MG_NO") ;
	String SS_TITLE = (String)session.getAttribute("SS_TITLE")  == null ? "": (String)session.getAttribute("SS_TITLE");
    String SS_URL =   (String)session.getAttribute("SS_URL")    == null ? "": (String)session.getAttribute("SS_URL") ;
    String SS_M_DEPT =   (String)session.getAttribute("SS_M_DEPT")    == null ? "": (String)session.getAttribute("SS_M_DEPT") ;    
    String SS_M_IP =   (String)session.getAttribute("SS_M_IP")    == null ? "": (String)session.getAttribute("SS_M_IP") ;    
    String SS_M_MAIL =   (String)session.getAttribute("SS_M_MAIL")    == null ? "": (String)session.getAttribute("SS_M_MAIL") ;    
	String SS_M_ORGVIEW_USEYN = (String)session.getAttribute("SS_M_ORGVIEW_USEYN")    == null ? "": (String)session.getAttribute("SS_M_ORGVIEW_USEYN") ;    
	String SS_ML_URL = javax.servlet.http.HttpUtils.getRequestURL(request).toString();
	
	String SS_SEARCHDATE = (String)session.getAttribute("SS_SEARCHDATE")    == null ? "": (String)session.getAttribute("SS_SEARCHDATE") ;
	
	
    

	if ((SS_M_ID.equals("")) || !SS_M_IP.equals(request.getRemoteAddr()) ) {
		ConfigUtil cu = new ConfigUtil();
		out.print("<SCRIPT Language=JavaScript>");
		//out.print("window.setTimeout( \" top.document.location = "+cu.getConfig("URL")+"'riskv3/error/sessionerror.jsp' \") ");
		out.print("top.document.location = '"+cu.getConfig("URL")+"risk/sessionerror.jsp'");
        out.print("</SCRIPT>");
    }
	

      out.write('\r');
      out.write('\n');
      out.write('\r');
      out.write('\n');

	String id = null;
	if( request.getParameter("id") != null ) id = request.getParameter("id");
	List MGlist = null;

	ConfigUtil cu = new ConfigUtil();
	MemberDao dao = new MemberDao();
	MemberGroupBean MGinfo = new MemberGroupBean();
	MemberBean member = (MemberBean)dao.schID(id);

	
	MGlist = dao.getMGList();
	
	//이슈 1depth - 부서
	String[] tmp_info = null;	
	
	ArrayList<String[]> check_list =  dao.checkDataList(id);
	String[] checklist = null;
	String[] check_data = null;

      out.write("\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<title>Untitled Document</title>\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\">\r\n");
      out.write("<link rel=\"stylesheet\" href=\"../../../css/base.css\" type=\"text/css\">\r\n");
      out.write("<script src=\"");
      out.print(SS_URL);
      out.write("js/jquery.js\" type=\"text/javascript\"></script>\r\n");
      out.write("<script src=\"");
      out.print(SS_URL);
      out.write("js/ajax.js\" type=\"text/javascript\"></script>\r\n");
      out.write("<script  type=\"text/JavaScript\">\r\n");
      out.write("\r\n");
      out.write("\tvar issueList=\"\";\r\n");
      out.write("\tfunction check(index) {\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tvar m_issuechk = document.getElementsByName(\"m_issuechk\");\r\n");
      out.write("\t\tvar DATA=\"\";\r\n");
      out.write("\t\t$(\"input[name=m_issuechk]:checked\").each(function(){\r\n");
      out.write("\t\t\t\tDATA += \",\"+($(this).val());\r\n");
      out.write("\t     });\r\n");
      out.write("\t\tissueList = DATA.substr(1);\r\n");
      out.write("\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\r\n");
      out.write("\r\n");
      out.write("\tfunction del_user()\r\n");
      out.write("\t{\r\n");
      out.write("\t\tif( confirm(\"사용자를 삭제하겠습니까?\") )\r\n");
      out.write("\t\t{\r\n");
      out.write("\t\t\tdocument.location.href = 'admin_user_prc.jsp?mode=del&m_seq='+user_add.m_seq.value;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t}\r\n");
      out.write("\r\n");
      out.write("\tfunction edit_user()\r\n");
      out.write("\t{\r\n");
      out.write("\t\tif(!user_add.m_id.value)\r\n");
      out.write("\t\t{\r\n");
      out.write("\t\t\talert('아이디를 입력하십시요.');\r\n");
      out.write("\t\t\tuser_add.m_id.focus();\r\n");
      out.write("\t\t} else if(!user_add.m_name.value)\r\n");
      out.write("\t\t{\r\n");
      out.write("\t\t\talert('이름를 입력하십시요.');\r\n");
      out.write("\t\t\tuser_add.m_name.focus();\r\n");
      out.write("\t\t} else if(!user_add.m_dept.value)\r\n");
      out.write("\t\t{\r\n");
      out.write("\t\t\talert('부서를 입력하십시요.');\r\n");
      out.write("\t\t\tuser_add.m_dept.focus();\r\n");
      out.write("\t\t} else if(!user_add.m_email.value)\r\n");
      out.write("\t\t{\r\n");
      out.write("\t\t\talert('E-mail를 입력하십시요.');\r\n");
      out.write("\t\t\tuser_add.m_email.focus();\r\n");
      out.write("\t\t} else if(!user_add.m_tel.value)\r\n");
      out.write("\t\t{\r\n");
      out.write("\t\t\talert('전화번호를 입력하십시요.');\r\n");
      out.write("\t\t\tuser_add.m_tel.focus();\r\n");
      out.write("\t\t} else {\r\n");
      out.write("\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t//배정권한 정제\r\n");
      out.write("\t\t\t//if(user_add.rd_ass_grade[0].checked){\r\n");
      out.write("\t\t\t//\tuser_add.m_ass_grade.value = '1';\r\n");
      out.write("\t\t\t//}else{\r\n");
      out.write("\t\t\t//\tuser_add.m_ass_grade.value = '0';\r\n");
      out.write("\t\t\t//}\r\n");
      out.write("\t\t\t//처리권한 정제\r\n");
      out.write("\t\t\t//if(user_add.rd_pro_grade[0].checked){\r\n");
      out.write("\t\t\t//\tuser_add.m_pro_grade.value = '1';\r\n");
      out.write("\t\t\t//}else{\r\n");
      out.write("\t\t\t//\tuser_add.m_pro_grade.value = '0';\r\n");
      out.write("\t\t\t//}\r\n");
      out.write("\t\t\t//승인권한 정제\r\n");
      out.write("\t\t\t//if(user_add.rd_app_grade[0].checked){\r\n");
      out.write("\t\t\t//\tuser_add.m_app_grade.value = '1';\r\n");
      out.write("\t\t\t//}else{\r\n");
      out.write("\t\t\t//\tuser_add.m_app_grade.value = '0';\r\n");
      out.write("\t\t\t//}\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\tuser_add.m_ass_grade.value = '0';\r\n");
      out.write("\t\t\tuser_add.m_pro_grade.value = '0';\r\n");
      out.write("\t\t\tuser_add.m_app_grade.value = '0';\r\n");
      out.write("\t\t\t$('#ic_code').val(issueList);\t\t\r\n");
      out.write("\t\t\tuser_add.submit();\r\n");
      out.write("\t\t}\r\n");
      out.write("\t}\r\n");
      out.write("\r\n");
      out.write("\tfunction ins_ip()\r\n");
      out.write("\t{\r\n");
      out.write("\t\tif(!ipmng.ip.value) {\r\n");
      out.write("\t\t\talert('ip를 입력하십시요.');\r\n");
      out.write("\t\t} else {\r\n");
      out.write("\t\t\tipmng.submit();\r\n");
      out.write("\t\t}\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\tvar str = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'; // 문자열만을 포함하는 변수\r\n");
      out.write("\tvar chr = '1234567890!@#$%^&*()-_=+'; // 숫자와 특수문자열을 포함하는 변수\r\n");
      out.write("\r\n");
      out.write("\tfunction passCheck() {\r\n");
      out.write("\t// 비밀번호 최소 길이를 설정합니다. (입력확인에 부가적으로 필요한 부분)\r\n");
      out.write("\t\tvar id = document.all.m_id.value;\r\n");
      out.write("\t\tvar pw1 = document.all.m_pass.value;\r\n");
      out.write("\t\tvar pw2 = document.all.m_pass2.value;\r\n");
      out.write("\r\n");
      out.write("\t\t//패스워드를 입력하지 않았다면 이전 패스워대로 저장\r\n");
      out.write("\t\tif(!pw1 && !pw2){\r\n");
      out.write("\t\t\tedit_user();\r\n");
      out.write("\t\t}else{\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t// 패스워드 입력 체크\r\n");
      out.write("\t\tif(pw1.length<4 || pw2.length<4) {\r\n");
      out.write("\t\t\talert('비밀번호는 최소 4자리 이상 입력해주세요.');\r\n");
      out.write("\t\t\treturn false;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t// 패스워드 반복입력 체크\r\n");
      out.write("\t\tif(pw1!=pw2) {\r\n");
      out.write("\t\talert('입력하신 비밀번호가 일치하지 않습니다.');\r\n");
      out.write("\t\treturn false;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\r\n");
      out.write("\t\tvar res_1 = 0; var res_2 = 0; \r\n");
      out.write("\t\t// 조건1과 조건2의 결과를 저장할 변수\r\n");
      out.write("\t\r\n");
      out.write("\t\t// 조건1: 같은 문자열이 연속으로 3개 이상일 경우 제한합니다.\r\n");
      out.write("\t\t/*\r\n");
      out.write("\t\tfor(var i=0; i<=pw1.length-3; i++) {\r\n");
      out.write("\t\t\tif(pw1.charAt(i)==pw1.charAt(i+1) && pw1.charAt(i)==pw1.charAt(i+2)) {\r\n");
      out.write("\t\t\t\talert('같은 문자열을 3개 이상 연속으로 사용할 수 없습니다.');\r\n");
      out.write("\t\t\t\treturn false;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\r\n");
      out.write("\t\t// 조건2: 문자는 최소 2개 이상이며, 숫자 또는 특수문자가 1개 이상 포함되어야 합니다.\r\n");
      out.write("\t\tfor(var x=0; x<pw1.length; x++) {\r\n");
      out.write("\t\t\tfor(var y=0; y<str.length; y++) {\r\n");
      out.write("\t\t\t\tif(pw1.charAt(x)==str.charAt(y)) res_1++;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\tfor(var z=0; z<chr.length; z++) {\r\n");
      out.write("\t\t\t\tif(pw1.charAt(x)==chr.charAt(z)) res_2++;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t// 조건1,2 결과 출력\r\n");
      out.write("\t\tif(res_1<2) {\r\n");
      out.write("\t\t\talert('영문자는 최소 2개 이상 입력하세요.');\r\n");
      out.write("\t\t\treturn false;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\tif(res_2<1) {\r\n");
      out.write("\t\t\talert('아래와 같은 숫자 또는 특수문자를 1개 이상 입력하셔야 합니다.\\n\\n'+chr);\r\n");
      out.write("\t\t\treturn false;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t// 패스워드에 아이디를 포함하는지 검사\r\n");
      out.write("\t\tif (id.length>0) {\r\n");
      out.write("\t\t\tif(pw1.indexOf(id) >= 0) {\r\n");
      out.write("\t\t\t\talert('아이디는 패스워드에  포함될 수 없습니다.');\r\n");
      out.write("\t\t\t\treturn false;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t*/\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tedit_user();\r\n");
      out.write("\t\t}\r\n");
      out.write("\t}\r\n");
      out.write("\r\n");
      out.write("//\r\n");
      out.write("</script>\r\n");
      out.write("<body style=\"margin-left: 15px\">\r\n");
      out.write("<form name=\"user_add\" action=\"admin_user_prc.jsp\" method=\"post\">\r\n");
      out.write("<input type=\"hidden\" name=\"mode\" value=\"edit\">\r\n");
      out.write("<input type=\"hidden\" name=\"m_seq\" value=\"");
      out.print(member.getM_seq());
      out.write("\">\r\n");
      out.write("<input type=\"hidden\" name=\"m_ass_grade\">\r\n");
      out.write("<input type=\"hidden\" name=\"m_pro_grade\">\r\n");
      out.write("<input type=\"hidden\" name=\"m_app_grade\">\r\n");
      out.write("<input type=\"hidden\" name=\"ic_code\" id=\"ic_code\">\r\n");
      out.write("<table style=\"width:100%;height:100%;\" border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\r\n");
      out.write("\t<tr>\r\n");
      out.write("\t\t<td class=\"body_bg_top\" valign=\"top\">\r\n");
      out.write("\t\t<table style=\"width:820px;\" border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\r\n");
      out.write("\t\t\t<!-- 타이틀 시작 -->\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td class=\"tit_bg\" style=\"height:67px;padding-top:20px;\">\r\n");
      out.write("\t\t\t\t<table style=\"width:100%;\" border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\r\n");
      out.write("\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t<td><img src=\"../../../images/admin/member/tit_icon.gif\" /><img src=\"../../../images/admin/member/tit_0501.gif\" /></td>\r\n");
      out.write("\t\t\t\t\t\t<td align=\"right\">\r\n");
      out.write("\t\t\t\t\t\t<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\r\n");
      out.write("\t\t\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t\t\t<td class=\"navi_home\">HOME</td>\r\n");
      out.write("\t\t\t\t\t\t\t\t<td class=\"navi_arrow\">관리자</td>\r\n");
      out.write("\t\t\t\t\t\t\t\t<td class=\"navi_arrow2\">사용자관리</td>\r\n");
      out.write("\t\t\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t\t</table>\r\n");
      out.write("\t\t\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t</table>\r\n");
      out.write("\t\t\t\t</td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td height=\"15\"></td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t<!-- 타이틀 끝 -->\r\n");
      out.write("\t\t\t<!-- 게시판 시작 -->\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td>\r\n");
      out.write("\t\t\t\t<table style=\"width:100%;\" border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\r\n");
      out.write("\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t<td style=\"height:30px;\"><span class=\"sub_tit\">필수입력 항목</span></td>\r\n");
      out.write("\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t<td>\r\n");
      out.write("\t\t\t\t\t\t<table id=\"board_write\" border=\"0\" cellspacing=\"0\">\r\n");
      out.write("\t\t\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t\t\t<th><span class=\"board_write_tit\">아이디</span></th>\r\n");
      out.write("\t\t\t\t\t\t\t\t<td><input style=\"width:30%;\" name=\"m_id\" type=\"text\" class=\"textbox2\" value=\"");
      out.print(member.getM_id());
      out.write("\" readonly></td>\r\n");
      out.write("\t\t\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t\t\t<th><span class=\"board_write_tit\">비밀번호</span></th>\r\n");
      out.write("\t\t\t\t\t\t\t\t<td><input style=\"width:30%;\" name=\"m_pass\" type=\"password\" class=\"textbox2\" value=\"\"> 비밀번호는 8자리 이상, 아이디와 다르게 입력하여 주십시오.</td>\r\n");
      out.write("\t\t\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t\t\t<th><span class=\"board_write_tit\">비밀번호확인</span></th>\r\n");
      out.write("\t\t\t\t\t\t\t\t<td><input style=\"width:30%;\" name=\"m_pass2\" type=\"password\" class=\"textbox2\" value=\"\"> 입력하신 비밀번호를 한번 더 입력해 주세요.</td>\r\n");
      out.write("\t\t\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t\t\t<th><span class=\"board_write_tit\">성명</span></th>\r\n");
      out.write("\t\t\t\t\t\t\t\t<td><input style=\"width:30%;\" name=\"m_name\" type=\"text\" class=\"textbox2\" value=\"");
      out.print(member.getM_name());
      out.write("\"></td>\r\n");
      out.write("\t\t\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t\t\t<th><span class=\"board_write_tit\">이메일</span></th>\r\n");
      out.write("\t\t\t\t\t\t\t\t<td><input style=\"width:30%;\" name=\"m_email\" type=\"text\" class=\"textbox2\" value=\"");
      out.print(member.getM_mail());
      out.write("\"></td>\r\n");
      out.write("\t\t\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t\t\t<th><span class=\"board_write_tit\">부서</span></th>\r\n");
      out.write("\t\t\t\t\t\t\t\t<td><input style=\"width:30%;\" name=\"m_dept\" type=\"text\" class=\"textbox2\" value=\"");
      out.print(member.getM_dept());
      out.write("\"></td>\r\n");
      out.write("\t\t\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t\t\t<th><span class=\"board_write_tit\">사용자그룹</span></th>\r\n");
      out.write("\t\t\t\t\t\t\t\t<td>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<select style=\"width:30%;\" name=\"m_mg\">\r\n");

		for(int i=0; i < MGlist.size();i++) {
			  MGinfo = new MemberGroupBean();
			  MGinfo = (MemberGroupBean)MGlist.get(i);	
			  if(!SS_MG_NO.equals("9") && !SS_MG_NO.equals("70")) {
				  if(MGinfo.getMg_seq().equals("9") || MGinfo.getMg_seq().equals("70")){
						continue;
					} 
			  } 

      out.write("\r\n");
      out.write("\t\t      <option value=\"");
      out.print(MGinfo.getMg_seq());
      out.write('"');
      out.write(' ');
if((member.getMg_seq()).equals(MGinfo.getMg_seq())) out.print("selected");
      out.write('>');
      out.print(MGinfo.getMg_name());
      out.write("</option>\r\n");

		}
	

      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\t\t</select>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t 사용자그룹별로 이용가능한 메뉴의 제한이 따릅니다.\r\n");
      out.write("\t\t\t\t\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t\t<!-- </table>\r\n");
      out.write("\t\t\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t<td style=\"padding-top:15px;height:45px;\"><span class=\"sub_tit\">추가입력 항목</span></td>\r\n");
      out.write("\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t<td>\r\n");
      out.write("\t\t\t\t\t\t<table id=\"board_write\" border=\"0\" cellspacing=\"0\"> -->\r\n");
      out.write("\t\t\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t\t\t<th><span class=\"board_write_tit\">직급</span></th>\r\n");
      out.write("\t\t\t\t\t\t\t\t<td><input style=\"width:30%;\" name=\"m_dpos\" type=\"text\" class=\"textbox2\" value=\"");
      out.print(member.getM_position());
      out.write("\"></td>\r\n");
      out.write("\t\t\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t\t\t<th><span class=\"board_write_tit\">전화번호</span></th>\r\n");
      out.write("\t\t\t\t\t\t\t\t<td><input style=\"width:30%;\" name=\"m_tel\" type=\"text\" class=\"textbox2\" value=\"");
      out.print(member.getM_tel());
      out.write("\"></td>\r\n");
      out.write("\t\t\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t\t\t<th><span class=\"board_write_tit\">핸드폰</span></th>\r\n");
      out.write("\t\t\t\t\t\t\t\t<td><input style=\"width:30%;\" name=\"m_hp\" type=\"text\" class=\"textbox2\" value=\"");
      out.print(member.getM_hp());
      out.write("\"></td>\r\n");
      out.write("\t\t\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t\t</table>\r\n");
      out.write("\t\t\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t");
      out.write("\r\n");
      out.write("\t\t\t<!-- 게시판 끝 -->\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td style=\"height:40px;\" align=\"center\"><img src=\"../../../images/admin/member/btn_save2.gif\" onclick=\"passCheck();\" style=\"cursor:pointer;\"/><img src=\"../../../images/admin/member/btn_cancel.gif\" onclick=\"window.history.back();\" style=\"cursor:pointer;\"/></td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t</table>\r\n");
      out.write("\t\t</td>\r\n");
      out.write("\t</tr>\r\n");
      out.write("</table>\r\n");
      out.write("</form>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
