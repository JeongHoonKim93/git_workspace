/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.0.M22
 * Generated at: 2022-07-27 07:41:23 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.riskv3.admin.classification2;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import risk.util.ConfigUtil;
import risk.admin.classification.classificationMgr;
import risk.util.DateUtil;
import risk.util.ParseRequest;

public final class frm_005ftest_005fclassification_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(1);
    _jspx_dependants.put("/riskv3/admin/classification2/../../inc/sessioncheck.jsp", Long.valueOf(1658907412822L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("risk.util.ConfigUtil");
    _jspx_imports_classes.add("risk.admin.classification.classificationMgr");
    _jspx_imports_classes.add("risk.util.ParseRequest");
    _jspx_imports_classes.add("risk.util.DateUtil");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=utf-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write('\r');
      out.write('\n');
//@ page contentType="text/html; charset=euc-kr"
      out.write("\r\n");
      out.write("\r\n");

    
	String SS_M_NO = (String)session.getAttribute("SS_M_NO")   == null ? "": (String)session.getAttribute("SS_M_NO")  ;
    String SS_M_ID = (String)session.getAttribute("SS_M_ID")   == null ? "": (String)session.getAttribute("SS_M_ID")  ;
    String SS_M_NAME = (String)session.getAttribute("SS_M_NAME") == null ? "": (String)session.getAttribute("SS_M_NAME");
    String SS_MG_NO = (String)session.getAttribute("SS_MG_NO")  == null ? "": (String)session.getAttribute("SS_MG_NO") ;
	String SS_TITLE = (String)session.getAttribute("SS_TITLE")  == null ? "": (String)session.getAttribute("SS_TITLE");
    String SS_URL =   (String)session.getAttribute("SS_URL")    == null ? "": (String)session.getAttribute("SS_URL") ;
    String SS_M_DEPT =   (String)session.getAttribute("SS_M_DEPT")    == null ? "": (String)session.getAttribute("SS_M_DEPT") ;    
    String SS_M_IP =   (String)session.getAttribute("SS_M_IP")    == null ? "": (String)session.getAttribute("SS_M_IP") ;    
    String SS_M_MAIL =   (String)session.getAttribute("SS_M_MAIL")    == null ? "": (String)session.getAttribute("SS_M_MAIL") ;    
	String SS_M_ORGVIEW_USEYN = (String)session.getAttribute("SS_M_ORGVIEW_USEYN")    == null ? "": (String)session.getAttribute("SS_M_ORGVIEW_USEYN") ;    
	String SS_ML_URL = javax.servlet.http.HttpUtils.getRequestURL(request).toString();
	
	String SS_SEARCHDATE = (String)session.getAttribute("SS_SEARCHDATE")    == null ? "": (String)session.getAttribute("SS_SEARCHDATE") ;
	
	
    

	if ((SS_M_ID.equals("")) || !SS_M_IP.equals(request.getRemoteAddr()) ) {
		ConfigUtil cu = new ConfigUtil();
		out.print("<SCRIPT Language=JavaScript>");
		//out.print("window.setTimeout( \" top.document.location = "+cu.getConfig("URL")+"'riskv3/error/sessionerror.jsp' \") ");
		out.print("top.document.location = '"+cu.getConfig("URL")+"risk/sessionerror.jsp'");
        out.print("</SCRIPT>");
    }
	

      out.write('\r');
      out.write('\n');
      out.write("\r\n");
      out.write("\r\n");

/* 
    DateUtil        du = new DateUtil();
    ParseRequest    pr = new ParseRequest(request);
    
    classificationMgr cm = new classificationMgr();
	
	int itype = pr.getInt("itype",0);
	int icode = pr.getInt("icode",0);

	
	String sCurrentDate = du.getCurrentDate("yyyyMMdd");
	System.out.println("sCurrentDate : " + sCurrentDate );
	
	String sDateFrom = pr.getString("sDateFrom",sCurrentDate );
	String sDateTo   = pr.getString("sDateFrom",sCurrentDate );
	
	//kg.setSelected(xp,yp,zp);
	
	//kg.setBaseTarget("parent.keyword_right");
	//kg.setBaseURL("admin_keyword_right.jsp?mod=");
	
	cm.setBaseTarget("parent.frm_detail");
	cm.setBaseURL("frm_classification_test_detail.jsp?mod=");
	cm.setSelected( itype, icode );
	
	String cmHtml   = cm.GetHtml( itype,icode );
	//String kgScript = kg.GetScript();
	//String kgStyle  = kg.GetStyle();
	
	System.out.println("itype = "+itype);
	System.out.println("icode = "+icode);
 */	
 
 DateUtil        du = new DateUtil();
 ParseRequest    pr = new ParseRequest(request);
 
 classificationMgr cm = new classificationMgr();
	
	int itype = pr.getInt("itype",0);
	int icode = pr.getInt("icode",0);

	cm.setBaseTarget("parent.frm_detail");
	cm.setBaseURL("frm_classification_test_detail.jsp?mod=");
 

      out.write("\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<title>TREE</title>\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=euc-kr\">\r\n");
      out.write("\r\n");
      out.write("<link rel=\"stylesheet\" href=\"../../tree/css/tree.css\" type=\"text/css\"/>\r\n");
      out.write("<script src=\"");
      out.print(SS_URL);
      out.write("js/jquery.js\"  type=\"text/javascript\"></script>\r\n");
      out.write("<script src=\"");
      out.print(SS_URL);
      out.write("js/ajax.js\"  type=\"text/javascript\"></script>\t\r\n");
      out.write("\r\n");
      out.write("<style>\r\n");
      out.write("<!--\r\n");
      out.write("body {\r\n");
      out.write("\tscrollbar-face-color: #FFFFFF; \r\n");
      out.write("\tscrollbar-shadow-color:#B3B3B3; \r\n");
      out.write("\tscrollbar-highlight-color:#B3B3B3; \r\n");
      out.write("\tscrollbar-3dlight-color: #FFFFFF; \r\n");
      out.write("\tscrollbar-darkshadow-color: #EEEEEE; \r\n");
      out.write("\tscrollbar-track-color: #F6F6F6; \r\n");
      out.write("\tscrollbar-arrow-color: #8B9EA6;\r\n");
      out.write("}\r\n");
      out.write(".kgmenu { font-size:12px; height:18px; color:#333333; padding:3 3 1 3; cursor:hand; border:1px solid #FFFFFF; }\r\n");
      out.write(".kgmenu_cnt { FONT-SIZE: 10px; COLOR: navy; FONT-FAMILY: \"tahoma\"; padding:0 0 0 3 }\r\n");
      out.write(".kgmenu_selected { font-size:12px; height:18px; color:#333333; padding:3 3 1 3; border:1px solid #999999; background-color:#F3F3F3; cursor:hand;}\r\n");
      out.write(".kgmenu_over { font-size:12px; height:18px; color:#333333; padding:3 3 1 3; cursor:hand; border:1px solid #999999; }\r\n");
      out.write(".kgmenu_img { cursor:hand; }\r\n");
      out.write("-->\r\n");
      out.write("</style>\r\n");
      out.write("\r\n");
      out.write("<script language=\"javascript\" type=\"text/javascript\">\r\n");
      out.write("$(document).ready(initLoadTree);\r\n");
      out.write("\r\n");
      out.write("function initLoadTree(){\t\t\t\r\n");
      out.write("\tajax.post('../../tree/tree.jsp','treeForm','tree');\t\t\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("function clickItem(ic_seq, itemId, imgId, type, code, ptype, pcode, childcount, level)\r\n");
      out.write("{\r\n");
      out.write("\t\r\n");
      out.write("\t$('#level').val(level);\r\n");
      out.write("\t$('#type').val(type);\r\n");
      out.write("\t$('#code').val(code);\r\n");
      out.write("\t$('#ptype').val(ptype);\r\n");
      out.write("\t$('#pcode').val(pcode);\t\t\t\r\n");
      out.write("\t$('#tmpItemId').val(itemId);\t\t\t\t\t\t\t\t\r\n");
      out.write("\r\n");
      out.write("\t\r\n");
      out.write("\tif(level=='2'){\r\n");
      out.write("\r\n");
      out.write("\t\t//선택 라인을 초기화 하고 그려준다.\r\n");
      out.write("\t\t$('#tree').find('p').attr('style','background-color:#ffffff; border: dashed 1px #ffffff;');\r\n");
      out.write("\t\t$('#'+imgId).attr('style','background-color:#f0f0f0; border: dashed 1px #ccc;');\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tif(childcount>0){\t\t\t\t\r\n");
      out.write("\t\t\t//키워드 그룹  트리 생성 및 삭제 \r\n");
      out.write("\t\t\tif($('#'+imgId).attr('class')=='closedFolder')\r\n");
      out.write("\t\t\t{\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t$('#'+imgId).attr('class','openFolder');\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t\taddItem(itemId);\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t}else{\r\n");
      out.write("\t\t\t\t$('#'+imgId).attr('class','closedFolder');\r\n");
      out.write("\t\t\t\tremoveItem(itemId);\r\n");
      out.write("\t\t\t}\t\t\r\n");
      out.write("\t\t}\t\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t}else if(level=='3'){\r\n");
      out.write("\r\n");
      out.write("\t\t//선택 라인을 초기화 하고 그려준다.\r\n");
      out.write("\t\t$('#tree').find('p').attr('style','background-color:#ffffff; border: dashed 1px #ffffff;');\r\n");
      out.write("\t\t$('#'+imgId).attr('style','background-color:#f0f0f0; border: dashed 1px #ccc;');\r\n");
      out.write("\r\n");
      out.write("\t\tif(childcount>0){\r\n");
      out.write("\t\t\t//키워드 트리 생성 및 삭제\r\n");
      out.write("\t\t\tif($('#'+imgId).attr('class')=='closedFolder')\r\n");
      out.write("\t\t\t{\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t$('#'+imgId).attr('class','openFolder');\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\taddItem(itemId);\r\n");
      out.write("\t\t\t}else{\r\n");
      out.write("\t\t\t\t$('#'+imgId).attr('class','closedFolder');\r\n");
      out.write("\t\t\t\tremoveItem(itemId);\r\n");
      out.write("\t\t\t}\t\t\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t\r\n");
      out.write("\t}else if(level=='4'){\r\n");
      out.write("\r\n");
      out.write("\t\t//선택 라인을 초기화 하고 그려준다.\r\n");
      out.write("\t\t$('#tree').find('p').attr('style','background-color:#ffffff; border: dashed 1px #ffffff;');\r\n");
      out.write("\t\t$('#'+imgId).attr('style','background-color:#f0f0f0; border: dashed 1px #ccc;');\r\n");
      out.write("\r\n");
      out.write("\t\tif(childcount>0){\r\n");
      out.write("\t\t\t//키워드 트리 생성 및 삭제\r\n");
      out.write("\t\t\tif($('#'+imgId).attr('class')=='closedFolder')\r\n");
      out.write("\t\t\t{\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t$('#'+imgId).attr('class','openFolder');\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\taddItem(itemId);\r\n");
      out.write("\t\t\t}else{\r\n");
      out.write("\t\t\t\t$('#'+imgId).attr('class','closedFolder');\r\n");
      out.write("\t\t\t\tremoveItem(itemId);\r\n");
      out.write("\t\t\t}\t\t\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\r\n");
      out.write("\t}else if(level=='5'){\r\n");
      out.write("\r\n");
      out.write("\t\t//선택 라인을 초기화 하고 그려준다.\r\n");
      out.write("\t\t$('#tree').find('p').attr('style','background-color:#ffffff; border: dashed 1px #ffffff;');\r\n");
      out.write("\t\t$('#'+imgId).attr('style','background-color:#f0f0f0; border: dashed 1px #ccc;');\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tif(childcount>0){\r\n");
      out.write("\t\t\t//키워드 트리 생성 및 삭제\r\n");
      out.write("\t\t\tif($('#'+imgId).attr('class')=='closedFolder')\r\n");
      out.write("\t\t\t{\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t$('#'+imgId).attr('class','openFolder');\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\taddItem(itemId);\r\n");
      out.write("\t\t\t}else{\r\n");
      out.write("\t\t\t\t$('#'+imgId).attr('class','closedFolder');\r\n");
      out.write("\t\t\t\tremoveItem(itemId);\r\n");
      out.write("\t\t\t}\t\t\r\n");
      out.write("\t\t}\r\n");
      out.write("\r\n");
      out.write("\t}else if(level=='6'){\r\n");
      out.write("\r\n");
      out.write("\t\t//선택 라인을 초기화 하고 그려준다.\r\n");
      out.write("\t\t$('#tree').find('p').attr('style','background-color:#ffffff; border: dashed 1px #ffffff;');\r\n");
      out.write("\t\t$('#'+imgId).attr('style','background-color:#f0f0f0; border: dashed 1px #ccc;');\r\n");
      out.write("\r\n");
      out.write("\t}\t\t\t\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t//우측 프레임 변경\t\t\t\r\n");
      out.write("\t$(parent.frm_detail).attr('location','frm_classification_test_detail.jsp?ic_seq='+ic_seq+'&type='+type+'&code='+code+'&ptype='+ptype+'&pcode='+pcode+'&level='+level);\t\r\n");
      out.write("\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("function addItem(itemId)\r\n");
      out.write("{\r\n");
      out.write("\t\r\n");
      out.write("\tajax.postAppend('../../tree/tree.jsp','treeForm',itemId);\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("function removeItem(itemId)\r\n");
      out.write("{\r\n");
      out.write("\t$('#'+itemId).find('ul').remove();\r\n");
      out.write("\t//$('#treeTest').val($('#'+itemId).html());\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("function clickKeyword(itemId, imgId, arg1, arg2, arg3)\r\n");
      out.write("{\t\t\t\t\r\n");
      out.write("\t$('#xp').val(arg1);\t\t\t\r\n");
      out.write("\t$('#yp').val(arg2);\t\t\t\r\n");
      out.write("\t$('#zp').val(arg3);\r\n");
      out.write("\t\r\n");
      out.write("\t//선택 라인을 초기화 하고 그려준다.\t\t\t\t\t\r\n");
      out.write("\t$('#tree').find('p').attr('style','background-color:#ffffff; border: dashed 1px #ffffff;');\r\n");
      out.write("\t$('#'+imgId).attr('style','background-color:#f0f0f0; border: dashed 1px #ccc;');\r\n");
      out.write("\r\n");
      out.write("\t//우측 프레임 변경\t\t\t\r\n");
      out.write("\t$(parent.keyword_right).attr('location','admin_keyword_right.jsp?xp='+arg1+'&yp='+arg2+'&zp='+arg3);\t\t\t\t\t\t\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("function proccessAfterReload()\r\n");
      out.write("{\t\t\t\r\n");
      out.write("\tremoveItem($('#tmpItemId').val());\r\n");
      out.write("\taddItem($('#tmpItemId').val());\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("/* \tfunction toggleme(object, subo) {\r\n");
      out.write("\r\n");
      out.write("var obj = document.getElementById(object);\t\t\t\t\t\t\r\n");
      out.write("var subObj = eval(\"document.all.\"+subo);\t\t\r\n");
      out.write("var i = 0;\t\t\t\t\t\t\t\t\t\t\r\n");
      out.write("var subcnt = subObj.length;\t\t\t\t\t\t\r\n");
      out.write("if (obj.src.indexOf('ico03')>0) {\t\t\t\t\r\n");
      out.write("\tif (subObj)\t{\t\t\t\t\t\t\t\t\r\n");
      out.write("\t\tobj.src = '../../../images/search/left_ico04.gif';\t\t\r\n");
      out.write("\t\tsubObj.style.display='';\t\t\t\t\r\n");
      out.write("\t}\t\t\t\t\t\t\t\t\t\t\t\r\n");
      out.write("} else {\t\t\t\t\t\t\t\t\t\t\t\r\n");
      out.write("\tif (subObj)\t{\t\t\t\t\t\t\t\t\r\n");
      out.write("\t\tobj.src = '../../../images/search/left_ico03.gif';\t\t\r\n");
      out.write("\t\tsubObj.style.display='none';\t\t\t\r\n");
      out.write("\t}\t\t\t\t\t\t\t\t\t\t\t\r\n");
      out.write("}\t\t\t\t\t\t\t\t\t\t\t\t\r\n");
      out.write("}\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n");
      out.write("function kg_over(obj) {\t\t\t\t\t\t\t\r\n");
      out.write("tmpspan.className=obj.className;\t\t\t\t\r\n");
      out.write("obj.className='kgmenu_over';\t\t\t\t\t\r\n");
      out.write("}\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n");
      out.write("function kg_out(obj){\t\t\t\t\t\t\t\t\r\n");
      out.write("obj.className=tmpspan.className;\t\t\t\t\r\n");
      out.write("}\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n");
      out.write("function kg_click(obj){\t\t\t\t\t\t\t\r\n");
      out.write("var prvObj = eval('document.all.'+document.all.kgmenu_id.value);\t\r\n");
      out.write("if (prvObj)\t\t\t\t\t\t\t\t\t\t\r\n");
      out.write("{\t\t\t\t\t\t\t\t\t\t\t\t\r\n");
      out.write("\tprvObj.className = 'kgmenu';\t\t\t\t\r\n");
      out.write("}\t\t\t\t\t\t\t\t\t\t\t\t\r\n");
      out.write("document.all.kgmenu_id.value = obj.id;\t\t\t\r\n");
      out.write("obj.className='kgmenu_selected';\t\t\t\t\r\n");
      out.write("tmpspan.className=obj.className;\t\t\t\t\r\n");
      out.write("}\r\n");
      out.write("function clk_total()\r\n");
      out.write("{\r\n");
      out.write("parent.keyword_right.location.href = 'admin_keyword_right.jsp';\r\n");
      out.write("}\r\n");
      out.write("*/\t\r\n");
      out.write("</SCRIPT>\r\n");
      out.write("</head>\r\n");
      out.write("<body bgcolor=\"#FFFFFF\" leftmargin=\"8\" topmargin=\"7\">\r\n");
      out.write("<form  name=\"treeForm\" id=\"treeForm\">\r\n");
      out.write("\t<input type=\"hidden\"  name=\"queryId\" value=\"CLASSIFICATION\">\r\n");
      out.write("\t<input type=\"hidden\" id=\"level\" name=\"level\" value=\"1\">\r\n");
      out.write("\t<input type=\"hidden\" id=\"xp\" name=\"xp\" value=\"\">\r\n");
      out.write("\t<input type=\"hidden\" id=\"yp\" name=\"yp\" value=\"\">\r\n");
      out.write("\t<input type=\"hidden\" id=\"zp\" name=\"zp\" value=\"\">\r\n");
      out.write("\t\r\n");
      out.write("\t<input type=\"hidden\" id=\"type\" name=\"type\" value=\"\">\r\n");
      out.write("\t<input type=\"hidden\" id=\"code\" name=\"code\" value=\"\">\r\n");
      out.write("\t<input type=\"hidden\" id=\"ptype\" name=\"ptype\" value=\"\">\r\n");
      out.write("\t<input type=\"hidden\" id=\"pcode\" name=\"pcode\" value=\"\">\r\n");
      out.write("\t\r\n");
      out.write("\t<input type=\"hidden\" id=\"tmpItemId\" name=\"tmpItemId\" value=\"\">\r\n");
      out.write("</form>\r\n");
      out.write("\t<div id=\"tree\">\r\n");
      out.write("\t</div>\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
