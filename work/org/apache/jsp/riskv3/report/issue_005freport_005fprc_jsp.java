/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.0.M22
 * Generated at: 2022-05-11 02:40:23 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.riskv3.report;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import risk.issue.*;
import risk.mail.*;
import risk.sms.AddressBookDao;
import risk.sms.AddressBookBean;
import risk.util.*;
import risk.search.*;
import risk.namo.*;
import risk.admin.log.*;
import java.util.ArrayList;
import java.io.File;
import risk.util.ConfigUtil;
import risk.sms.SmsSend;

public final class issue_005freport_005fprc_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(1);
    _jspx_dependants.put("/riskv3/report/../inc/sessioncheck.jsp", Long.valueOf(1651044823347L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("risk.admin.log");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("risk.mail");
    _jspx_imports_packages.add("risk.util");
    _jspx_imports_packages.add("risk.namo");
    _jspx_imports_packages.add("risk.search");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_packages.add("risk.issue");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("risk.util.ConfigUtil");
    _jspx_imports_classes.add("risk.sms.SmsSend");
    _jspx_imports_classes.add("risk.sms.AddressBookBean");
    _jspx_imports_classes.add("risk.sms.AddressBookDao");
    _jspx_imports_classes.add("java.io.File");
    _jspx_imports_classes.add("java.util.ArrayList");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=utf-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

//@ page contentType="text/html; charset=euc-kr"

    
	String SS_M_NO = (String)session.getAttribute("SS_M_NO")   == null ? "": (String)session.getAttribute("SS_M_NO")  ;
    String SS_M_ID = (String)session.getAttribute("SS_M_ID")   == null ? "": (String)session.getAttribute("SS_M_ID")  ;
    String SS_M_NAME = (String)session.getAttribute("SS_M_NAME") == null ? "": (String)session.getAttribute("SS_M_NAME");
    String SS_MG_NO = (String)session.getAttribute("SS_MG_NO")  == null ? "": (String)session.getAttribute("SS_MG_NO") ;
	String SS_TITLE = (String)session.getAttribute("SS_TITLE")  == null ? "": (String)session.getAttribute("SS_TITLE");
    String SS_URL =   (String)session.getAttribute("SS_URL")    == null ? "": (String)session.getAttribute("SS_URL") ;
    String SS_M_DEPT =   (String)session.getAttribute("SS_M_DEPT")    == null ? "": (String)session.getAttribute("SS_M_DEPT") ;    
    String SS_M_IP =   (String)session.getAttribute("SS_M_IP")    == null ? "": (String)session.getAttribute("SS_M_IP") ;    
    String SS_M_MAIL =   (String)session.getAttribute("SS_M_MAIL")    == null ? "": (String)session.getAttribute("SS_M_MAIL") ;    
	String SS_M_ORGVIEW_USEYN = (String)session.getAttribute("SS_M_ORGVIEW_USEYN")    == null ? "": (String)session.getAttribute("SS_M_ORGVIEW_USEYN") ;    
	String SS_ML_URL = javax.servlet.http.HttpUtils.getRequestURL(request).toString();
	
	String SS_SEARCHDATE = (String)session.getAttribute("SS_SEARCHDATE")    == null ? "": (String)session.getAttribute("SS_SEARCHDATE") ;
	
	
    

	if ((SS_M_ID.equals("")) || !SS_M_IP.equals(request.getRemoteAddr()) ) {
		ConfigUtil cu = new ConfigUtil();
		out.print("<SCRIPT Language=JavaScript>");
		//out.print("window.setTimeout( \" top.document.location = "+cu.getConfig("URL")+"'riskv3/error/sessionerror.jsp' \") ");
		out.print("top.document.location = '"+cu.getConfig("URL")+"risk/sessionerror.jsp'");
        out.print("</SCRIPT>");
    }
	


	ParseRequest pr = new ParseRequest(request);
	pr.printParams();
	DateUtil du = new DateUtil();
	ConfigUtil cu = new ConfigUtil();
	MailTool mail = new MailTool();
	GoogleSmtp gMail = new GoogleSmtp();
	StringUtil su = new StringUtil();
	IssueMgr iMgr = new IssueMgr();
	MetaMgr metaMgr = new MetaMgr();
	IssueReportMgr irMgr = new IssueReportMgr();
	LogMgr logMgr = new LogMgr();
	LogBean logBean = new LogBean();
	NamoMime mime = new NamoMime();
	
	MetaBean mBean = null;
	IssueDataBean idBean = null;
	IssueCommentBean icBean = null;
	IssueReportBean irBean = null;	
	AddressBookDao abDao = new AddressBookDao();
	ArrayList arrABBean = null;
	ArrayList arrAGBean = null;
	AddressBookBean abBean = null;
	AddressBookBean abBean2 = null;
	String typeCode= null;
	String reportHtml= null;
	String script_str = null;
	boolean sendResult = false;	
	
	String[] arrDelseq = null;	
	String mode = pr.getString("mode");
	
	String smsreceiver = pr.getString("smsreceiver","");
	String nowPage = pr.getString("nowPage","1");
	
	
	//메일 발송 관련
	String m_seq = SS_M_ID; 				              //등록자
	String sendMailUser = SS_M_MAIL;			          //보낸이
	String mailreceiver = pr.getString("mailreceiver");	  //보낼 수신자 번호
	String mailreceiverGroup = pr.getString("mailreceiverGroup");	  //보낼 수신자 번호
	
	//리포트 관련
	String ir_type = pr.getString("ir_type");
	String ir_title = pr.getString("ir_title");
	String ir_html = pr.getString("ir_html");
	String ir_seq  = pr.getString("ir_seq");
	String id_seq  = pr.getString("id_seq");
	
	
	//이슈 리포트 삭제
	if(mode.equals("delete"))
	{
		//삭제번호어레이
		arrDelseq = pr.getString("delseq").split(",");
		
		//리포트 삭제	
		irMgr.deleteReport(pr.getString("delseq"));			
		
		if(arrDelseq.length>0)
		{
			//로그 저장
			logBean = new LogBean();		
			logBean.setL_kinds(LogConstants.getReportKindsVal());
			logBean.setL_type(LogConstants.getDeleteTypeVal());
			logBean.setL_ip(request.getRemoteAddr());
			logBean.setM_seq(SS_M_NO);
			for(int i=0; i<arrDelseq.length; i++)
			{
				logBean.setKey(arrDelseq[i]);
				logMgr.insertLog(logBean);
			}		
		}
	
		script_str = "alert('리포트를 삭제하였습니다.'); \n"
		   			 +"parent.document.location='issue_report_list.jsp?ir_type="+pr.getString("ir_type")+"'";
	//이슈 리포트 저장
	}else if(mode.equals("insert")){
		
		//Namo 2011.02.09  임승철		
		String namoDataPath = cu.getConfig("NAMOPATH");
	    String namoDataUrl = cu.getConfig("NAMOURL");
	    String upsDir = "namoImages/report/"+ir_type+"/y" + du.getDate("yyyy") + "/" + du.getDate("MMdd") + "/"+ du.getDate("HHmmss");
	    
	 	// 저장할 절대경로
	    namoDataPath = namoDataPath + upsDir;	    
	 	// 저장할 상대경로
	    namoDataUrl = namoDataUrl + upsDir;
	    //System.out.println("namoDataPath:"+namoDataPath);
	    //System.out.println("namoDataUrl:"+namoDataUrl);
	    
	    //저장 경로 디텍토리가 없으면 생성해주고 나모 저장경로 셋팅
	    if(!new File(namoDataPath).isDirectory()) new File(namoDataPath).mkdirs();
	    
	    if(pr.getString("reportType").equals("1")){

		    if(pr.getString("IEuse").equals("Y")){
		    	mime.setSaveURL(namoDataUrl);
			    mime.setSavePath(namoDataPath);
			    
			    mime.decode(ir_html); // MIME 디코딩   		   
			    mime.saveFile();
			    
			    ir_html = mime.getBodyContent("UTF-8");
		    }
	    }
	    
	    //mime.setSaveURL(namoDataUrl);
	    //mime.setSavePath(namoDataPath);
	    
	    //mime.decode(ir_html); // MIME 디코딩   		   
	    //mime.saveFile();
	    
	    //ir_html = mime.getBodyContent("UTF-8");
			
		//리포트 저장후 로그 저장
		irBean = new IssueReportBean();
		logBean = new LogBean();						
		
		irBean.setIr_title(ir_title);
		//irBean.setIr_html(su.dbString(ir_html));//나모 HTML 셋팅
		irBean.setIr_html(su.dbString2(su.remove_MSTag(ir_html)).replaceAll("\n","").replaceAll((new Character((char)13)).toString(),"").replaceAll((new Character((char)9)).toString(),"").replaceAll((new Character((char)11)).toString(),""));//나모 HTML 셋팅
		irBean.setIr_memo("");
		irBean.setIr_type(ir_type);
		irBean.setIr_mailyn("N");
		irBean.setIr_regdate(du.getCurrentDate("yyyy-MM-dd HH:mm:ss"));
		irBean.setId_seq(id_seq);
		
		logBean.setKey(irMgr.insertReport(irBean)); //리포트 저장후 리포트 번호 셋팅
		logBean.setL_kinds(LogConstants.getReportKindsVal());
		logBean.setL_type(LogConstants.getInsertTypeVal());
		logBean.setL_ip(request.getRemoteAddr());
		logBean.setM_seq(SS_M_NO);
		logBean.setL_seq(logMgr.insertLog(logBean)); //로그 저장후 로그 번호 셋팅		
		
		
		if(id_seq.equals("")){
			script_str = "alert('보고서를 저장하였습니다.');  parent.close();\n";
		}else{
			script_str = "alert('보고서를 저장하였습니다.');  parent.opener.search('"+nowPage+"'); parent.close();\n";
		}
				
	}else if(mode.equals("update")){
		
		//Namo 2011.02.09  임승철		
		String namoDataPath = cu.getConfig("NAMOPATH");
	    String namoDataUrl = cu.getConfig("NAMOURL");
	    String upsDir = "namoImages/report/"+ir_type+"/y" + du.getDate("yyyy") + "/" + du.getDate("MMdd") + "/"+ du.getDate("HHmmss");
	    
	    
	 	// 저장할 절대경로
	    namoDataPath = namoDataPath + upsDir;	    
	 	// 저장할 상대경로
	    namoDataUrl = namoDataUrl + upsDir;
	 	
	 	//저장 경로 디텍토리가 없으면 생성해주고 나모 저장경로 셋팅
	    if(!new File(namoDataPath).isDirectory()) new File(namoDataPath).mkdirs();
	    
	    if(pr.getString("reportType").equals("1")){

		    if(pr.getString("IEuse").equals("Y")){
		    	mime.setSaveURL(namoDataUrl);
			    mime.setSavePath(namoDataPath);
			    
			    mime.decode(ir_html); // MIME 디코딩   		   
			    mime.saveFile();
			    
			    ir_html = mime.getBodyContent("UTF-8");
		    }
	    }
	    
	    //mime.setSaveURL(namoDataUrl);
	    //mime.setSavePath(namoDataPath);
	    
	    //mime.decode(ir_html); // MIME 디코딩   		   
	    //mime.saveFile();
	    
	    //ir_html = mime.getBodyContent("UTF-8");
	    
	    if(irMgr.UpdateReport(ir_seq, su.dbString2(su.remove_MSTag(ir_html)))){
	    	script_str = "alert('보고서를 수정하였습니다.');  parent.close();\n";
	    }
	}else if(mode.equals("mail_group")){
		irBean = new IssueReportBean();
		logBean = new LogBean();
		
		irBean = irMgr.getReportBean(pr.getString("ir_seq")); //리포트 정보 
		
		logBean.setKey(pr.getString("ir_seq")); //리포트 번호 셋팅
		logBean.setL_kinds(LogConstants.getReportKindsVal());
		logBean.setL_type(LogConstants.getMailTypeVal());
		logBean.setL_ip(request.getRemoteAddr());
		logBean.setM_seq(SS_M_NO);
		logBean.setL_seq(logMgr.insertLog(logBean)); //로그 저장후 로그 번호 셋팅		
	
		//수신자 그룹 정보 
		arrABBean = new ArrayList();
		//arrABBean = abDao.getAddressBook(mailreceiver);
		arrABBean = abDao.getAddressBookByGroup(mailreceiver);

		
		//String receipt = cu.getConfig("URL") + "riskv3/report/report_receipt.jsp";
		String receipt = cu.getConfig("URL") + "riskv3/report/report_receipt_group.jsp";
		
		
		//메일발송
		if(arrABBean.size()>0){			
			for( int i=0 ; i <arrABBean.size() ; i++ )
			{			
				abBean = (AddressBookBean)arrABBean.get(i);							
				
				if(sendMailUser.length()>0){
					/* sendResult = gMail.sendmessage(abBean.getMab_mail(), sendMailUser, su.cutString(irBean.getIr_title(), 45, "..."), irBean.getIr_html().replaceAll("report_receipt", receipt + "?info=" + logBean.getL_seq() + "," + abBean.getMab_seq()), true); */
					sendResult = gMail.sendmessage(abBean.getMab_mail(), sendMailUser, su.cutString(irBean.getIr_title(), 45, "..."), irBean.getIr_html().replaceAll("report_receipt", receipt + "?info=" + logBean.getL_seq() + "," + abBean.getMag_seq()), true);
				}else{
					/* sendResult = gMail.sendmessage(abBean.getMab_mail(), su.cutString(irBean.getIr_title(), 45, "..."),  irBean.getIr_html().replaceAll("report_receipt", receipt + "?info=" + logBean.getL_seq() + "," + abBean.getMab_seq()), true); */
					sendResult = gMail.sendmessage(abBean.getMab_mail(), su.cutString(irBean.getIr_title(), 45, "..."),  irBean.getIr_html().replaceAll("report_receipt", receipt + "?info=" + logBean.getL_seq() + "," + abBean.getMag_seq()), true);
				}					
			}
			//메일 수신자 로그
			if(sendResult){
				//logMgr.insertLogReceiver(logBean.getL_seq(),mailreceiver.split(","));
				logMgr.insertLogReceiverGroup(logBean.getL_seq(),mailreceiver.split(","));
				
			}
		}
		
		//SMS발송
		SmsSend ss = new SmsSend();
		String[] ar_sms_receiver = smsreceiver.split(",");
		String phone = "";
		String msg = "";
		for(int i =0; i < ar_sms_receiver.length; i++){
			phone = ar_sms_receiver[i].replaceAll("-","").replaceAll(" ","");
			ss.SendSMS(phone,su.cutString(irBean.getIr_title(), 40, "..."));
			
		}
		
		if(sendResult){
			irBean.setIr_mailyn("Y");
			irMgr.updateMailYN(irBean);
			script_str = "parent.document.getElementById('sending').style.display = 'none'; alert('메일수신자 그룹에게 메일을 발송합니다.');  parent.document.location.reload();\n";
		}else{
			irBean.setIr_mailyn("F");
			irMgr.updateMailYN(irBean);
			script_str = "parent.document.getElementById('sending').style.display = 'none'; alert('메일 발송에 실패하셨습니다.');  parent.document.location.reload();\n";
		}
	
	}else if(mode.equals("mail")){
					
		irBean = new IssueReportBean();
		logBean = new LogBean();
		
		irBean = irMgr.getReportBean(pr.getString("ir_seq")); //리포트 정보 
		
		logBean.setKey(pr.getString("ir_seq")); //리포트 번호 셋팅
		logBean.setL_kinds(LogConstants.getReportKindsVal());
		logBean.setL_type(LogConstants.getMailTypeVal());
		logBean.setL_ip(request.getRemoteAddr());
		logBean.setM_seq(SS_M_NO);
		logBean.setL_seq(logMgr.insertLog(logBean)); //로그 저장후 로그 번호 셋팅		
	
		//수신자 정보 
		arrABBean = new ArrayList();
		arrABBean = abDao.getAddressBook(mailreceiver);

		String receipt = cu.getConfig("URL") + "riskv3/report/report_receipt.jsp";
		
		
		//메일발송
		if(arrABBean.size()>0){			
			for( int i=0 ; i <arrABBean.size() ; i++ )
			{			
				abBean = (AddressBookBean)arrABBean.get(i);							
				
				if(sendMailUser.length()>0){
					sendResult = gMail.sendmessage(abBean.getMab_mail(), sendMailUser, su.cutString(irBean.getIr_title(), 45, "..."), irBean.getIr_html().replaceAll("report_receipt", receipt + "?info=" + logBean.getL_seq() + "," + abBean.getMab_seq()), true);	
				}else{
					sendResult = gMail.sendmessage(abBean.getMab_mail(), su.cutString(irBean.getIr_title(), 45, "..."),  irBean.getIr_html().replaceAll("report_receipt", receipt + "?info=" + logBean.getL_seq() + "," + abBean.getMab_seq()), true); 
				}					
			}
			//메일 수신자 로그
			if(sendResult){
				logMgr.insertLogReceiver(logBean.getL_seq(),mailreceiver.split(","));
				
			}
		}
		
		//SMS발송
		SmsSend ss = new SmsSend();
		String[] ar_sms_receiver = smsreceiver.split(",");
		String phone = "";
		String msg = "";
		for(int i =0; i < ar_sms_receiver.length; i++){
			phone = ar_sms_receiver[i].replaceAll("-","").replaceAll(" ","");
			ss.SendSMS(phone,su.cutString(irBean.getIr_title(), 40, "..."));
			
		}
		
		if(sendResult){
			irBean.setIr_mailyn("Y");
			irMgr.updateMailYN(irBean);
			script_str = "parent.document.getElementById('sending').style.display = 'none'; alert('메일수신자에게 메일을 발송합니다.');  parent.document.location.reload();\n";
		}else{
			irBean.setIr_mailyn("F");
			irMgr.updateMailYN(irBean);
			script_str = "parent.document.getElementById('sending').style.display = 'none'; alert('메일 발송에 실패하셨습니다.');  parent.document.location.reload();\n";
		}
		
	}else if(mode.equals("mail_multi")){
		irBean = new IssueReportBean();
		logBean = new LogBean();
		
		irBean = irMgr.getReportBean(pr.getString("ir_seq")); //리포트 정보 
		
		logBean.setKey(pr.getString("ir_seq")); //리포트 번호 셋팅
		logBean.setL_kinds(LogConstants.getReportKindsVal());
		logBean.setL_type(LogConstants.getMailTypeVal());
		logBean.setL_ip(request.getRemoteAddr());
		logBean.setM_seq(SS_M_NO);
		logBean.setL_seq(logMgr.insertLog(logBean)); //로그 저장후 로그 번호 셋팅		
	
		String receipt = cu.getConfig("URL") + "riskv3/report/report_receipt.jsp";
		String receipt_group = cu.getConfig("URL") + "riskv3/report/report_receipt_group.jsp";

		//수신자 그룹 정보 
		//개인 발송
		arrABBean = new ArrayList();
		if(!mailreceiver.equals("")){
			arrABBean = abDao.getAddressBook(mailreceiver);	
		}
		
		//메일발송  - 개인
		if(arrABBean.size()>0){			
			for( int i=0 ; i <arrABBean.size() ; i++ )
			{			
				abBean = (AddressBookBean)arrABBean.get(i);							
				
				if(sendMailUser.length()>0){
					sendResult = gMail.sendmessage(abBean.getMab_mail(), sendMailUser, su.cutString(irBean.getIr_title(), 45, "..."), irBean.getIr_html().replaceAll("report_receipt", receipt + "?info=" + logBean.getL_seq() + "," + abBean.getMab_seq()), true);
				}else{
					sendResult = gMail.sendmessage(abBean.getMab_mail(), su.cutString(irBean.getIr_title(), 45, "..."),  irBean.getIr_html().replaceAll("report_receipt", receipt + "?info=" + logBean.getL_seq() + "," + abBean.getMab_seq()), true); 
				}					
			}
			//메일 수신자 로그
			if(sendResult){
				logMgr.insertLogReceiver(logBean.getL_seq(),mailreceiver.split(","));
				
			}
		}
		
		//개인발송된 사람은 그룹발송할 때 중복발송안되게 발송리스트에서 제거
		String ab_seq_list = logMgr.getLogReceiverforDeduplication(logBean.getL_seq());
		
		//그룹발송
		arrAGBean = new ArrayList();
		if(!mailreceiverGroup.equals("")){
			if(ab_seq_list.equals("") || ab_seq_list == null) {
				arrAGBean = abDao.getAddressBookByGroup(mailreceiverGroup);	
			} else { 
				arrAGBean = abDao.getAddressBookByGroupforDeduplication(mailreceiverGroup,ab_seq_list);	
			}
		}
		
		//메일발송  - 그룹
		if(arrAGBean.size()>0){			
			for( int i=0 ; i <arrAGBean.size() ; i++ )
			{			
				abBean = (AddressBookBean)arrAGBean.get(i);
				
				if(sendMailUser.length()>0){
					sendResult = gMail.sendmessage(abBean.getMab_mail(), sendMailUser, su.cutString(irBean.getIr_title(), 45, "..."), irBean.getIr_html().replaceAll("report_receipt", receipt_group + "?info=" + logBean.getL_seq() + "," + abBean.getMag_seq()), true);
				}else{
					sendResult = gMail.sendmessage(abBean.getMab_mail(), su.cutString(irBean.getIr_title(), 45, "..."),  irBean.getIr_html().replaceAll("report_receipt", receipt_group + "?info=" + logBean.getL_seq() + "," + abBean.getMag_seq()), true);
				}								
				
			}
			//메일 수신자 로그
			if(sendResult){
				logMgr.insertLogReceiverGroup(logBean.getL_seq(),mailreceiverGroup.split(","));
				for(int i=0;i<mailreceiverGroup.split(",").length;i++) {
				}
			}
		}
		
 		//SMS발송
		SmsSend ss = new SmsSend();
		String[] ar_sms_receiver = smsreceiver.split(",");
		String phone = "";
		String msg = "";
		for(int i =0; i < ar_sms_receiver.length; i++){
			phone = ar_sms_receiver[i].replaceAll("-","").replaceAll(" ","");
			ss.SendSMS(phone,su.cutString(irBean.getIr_title(), 40, "..."));
			
		}
 		
		if(sendResult){
			irBean.setIr_mailyn("Y");
			irMgr.updateMailYN(irBean);
			script_str = "parent.document.getElementById('sending').style.display = 'none'; alert('메일수신자 그룹에게 메일을 발송합니다.');  parent.document.location.reload();\n";
		}else{
			irBean.setIr_mailyn("F");
			irMgr.updateMailYN(irBean);
			script_str = "parent.document.getElementById('sending').style.display = 'none'; alert('메일 발송에 실패하셨습니다.');  parent.document.location.reload();\n";
		}
	}else if(mode.equals("summary")){
		
		if(irMgr.setIdContent(pr.getString("save_id_seq"),pr.getString("txt_summary"))){
			script_str = "parent.MoveContent();";	
		}else{
			script_str = "alert(저장실패입니다.)";	
		}
	}

      out.write(_jspx_char_array_0);
      out.print(script_str);
      out.write(_jspx_char_array_1);
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
  static char[] _jspx_char_array_0 = "<script language=\"JavaScript\" type=\"text/JavaScript\">\r\n".toCharArray();
  static char[] _jspx_char_array_1 = "</script>".toCharArray();
}
