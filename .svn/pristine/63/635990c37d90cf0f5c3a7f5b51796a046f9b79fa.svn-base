/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.0.M22
 * Generated at: 2022-04-27 07:57:36 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.riskv3.tree;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import risk.util.DateUtil;
import risk.util.ParseRequest;
import risk.util.StringUtil;
import risk.admin.classification.*;
import java.util.ArrayList;
import risk.tree.TreeBean;
import risk.tree.TreeDao;

public final class tree_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("risk.admin.classification");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("risk.tree.TreeDao");
    _jspx_imports_classes.add("risk.util.ParseRequest");
    _jspx_imports_classes.add("risk.util.DateUtil");
    _jspx_imports_classes.add("risk.tree.TreeBean");
    _jspx_imports_classes.add("risk.util.StringUtil");
    _jspx_imports_classes.add("java.util.ArrayList");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=utf-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;


	ParseRequest pr = new ParseRequest(request);
	pr.printParams();

	ArrayList arrTreeData = new ArrayList();
	StringUtil su = new StringUtil();
	DateUtil du = new DateUtil();
	TreeDao treeDao = new TreeDao();
	TreeBean treeBean = new TreeBean();
	classificationMgr  clfMgr  = new classificationMgr();
	clfBean clfbean = new  clfBean();
	
	ArrayList arrData = new ArrayList();
	
	String typeOfclass = "";
	String queryId = pr.getString("queryId");	
	
	try{
	if(queryId.equals("CLASSIFICATION")){
		
		
		String	type = pr.getString("type");
		String code = pr.getString("code");
		String ptype = pr.getString("ptype");
		String pcode = pr.getString("pcode");
		int level = pr.getInt("level",0);
			

		if(level ==0 ) level = 1;
		
		arrData = treeDao.getCodeData(type, code, ptype, pcode, level );
		
		if(level == 1){
			
		out.println("<ul class='top'> \r\n");
			for(int i=0 ; i<arrData.size(); i++){
				clfbean = (clfBean)arrData.get(i);			

      out.write(_jspx_char_array_0);
      out.print(clfbean.getIc_seq());
      out.write(_jspx_char_array_1);
      out.print(clfbean.getIc_name());
      out.write(_jspx_char_array_2);
      out.print(clfbean.getIc_seq());
      out.write(_jspx_char_array_3);
      out.print(clfbean.getIc_seq());
      out.write(_jspx_char_array_4);
      out.print(clfbean.getIc_seq());
      out.write(_jspx_char_array_5);
      out.print(clfbean.getIc_seq());
      out.write('\'');
      out.write(',');
      out.print(clfbean.getIc_type());
      out.write(',');
      out.print(clfbean.getIc_code());
      out.write(',');
      out.print(clfbean.getIc_ptype());
      out.write(',');
      out.print(clfbean.getIc_pcode());
      out.write(',');
      out.write(' ');
      out.print(clfbean.getChildCnt());
      out.write(_jspx_char_array_6);
      out.print(clfbean.getIc_name());
      out.write(_jspx_char_array_7);
		
			}	
		out.println("</ul> \r\n");
		
		}else if(level == 2){
			
		out.println("<ul>");
			for(int i=0 ; i<arrData.size(); i++){
				clfbean = (clfBean)arrData.get(i);			

      out.write(_jspx_char_array_0);
      out.print(clfbean.getIc_seq());
      out.write(_jspx_char_array_1);
      out.print(clfbean.getIc_name());
      out.write(_jspx_char_array_2);
      out.print(clfbean.getIc_seq());
      out.write(_jspx_char_array_3);
      out.print(clfbean.getIc_seq());
      out.write(_jspx_char_array_4);
      out.print(clfbean.getIc_seq());
      out.write(_jspx_char_array_5);
      out.print(clfbean.getIc_seq());
      out.write('\'');
      out.write(',');
      out.print(clfbean.getIc_type());
      out.write(',');
      out.print(clfbean.getIc_code());
      out.write(',');
      out.print(clfbean.getIc_ptype());
      out.write(',');
      out.print(clfbean.getIc_pcode());
      out.write(',');
      out.write(' ');
      out.print(clfbean.getChildCnt());
      out.write(_jspx_char_array_8);
      out.print(clfbean.getIc_name());
      out.write(_jspx_char_array_7);
		
			}	
		out.println("</ul> \r\n");
		
		}else if(level == 3){
			
			out.println("<ul> \r\n");
				for(int i=0 ; i<arrData.size(); i++){
					clfbean = (clfBean)arrData.get(i);
					
					
					
				
      out.write(_jspx_char_array_0);
      out.print(clfbean.getIc_seq());
      out.write(_jspx_char_array_1);
      out.print(clfbean.getIc_name());
      out.write(_jspx_char_array_9);
      out.print(clfbean.getIc_seq());
      out.write(_jspx_char_array_3);
      out.print(clfbean.getIc_seq());
      out.write(_jspx_char_array_4);
      out.print(clfbean.getIc_seq());
      out.write(_jspx_char_array_5);
      out.print(clfbean.getIc_seq());
      out.write('\'');
      out.write(',');
      out.print(clfbean.getIc_type());
      out.write(',');
      out.print(clfbean.getIc_code());
      out.write(',');
      out.print(clfbean.getIc_ptype());
      out.write(',');
      out.print(clfbean.getIc_pcode());
      out.write(',');
      out.write(' ');
      out.print(clfbean.getChildCnt());
      out.write(_jspx_char_array_10);
      out.print(clfbean.getIc_name());
      out.write(_jspx_char_array_11);
		
				}	
			out.println("</ul> \r\n");
			
		}else if(level == 4){
			
			out.println("<ul> \r\n");
				for(int i=0 ; i<arrData.size(); i++){
					clfbean = (clfBean)arrData.get(i);
					
					
					
				
      out.write(_jspx_char_array_0);
      out.print(clfbean.getIc_seq());
      out.write(_jspx_char_array_1);
      out.print(clfbean.getIc_name());
      out.write(_jspx_char_array_9);
      out.print(clfbean.getIc_seq());
      out.write(_jspx_char_array_3);
      out.print(clfbean.getIc_seq());
      out.write(_jspx_char_array_4);
      out.print(clfbean.getIc_seq());
      out.write(_jspx_char_array_5);
      out.print(clfbean.getIc_seq());
      out.write('\'');
      out.write(',');
      out.print(clfbean.getIc_type());
      out.write(',');
      out.print(clfbean.getIc_code());
      out.write(',');
      out.print(clfbean.getIc_ptype());
      out.write(',');
      out.print(clfbean.getIc_pcode());
      out.write(',');
      out.write(' ');
      out.print(clfbean.getChildCnt());
      out.write(_jspx_char_array_12);
      out.print(clfbean.getIc_name());
      out.write(_jspx_char_array_11);
		
				}	
			out.println("</ul> \r\n");
			
		}else if(level == 5){
			
		out.println("<ul> \r\n");
			for(int i=0 ; i<arrData.size(); i++){
				clfbean = (clfBean)arrData.get(i);			
			
      out.write(_jspx_char_array_0);
      out.print(clfbean.getIc_seq());
      out.write(_jspx_char_array_1);
      out.print(clfbean.getIc_name());
      out.write(_jspx_char_array_13);
      out.print(clfbean.getIc_seq());
      out.write(_jspx_char_array_3);
      out.print(clfbean.getIc_seq());
      out.write(_jspx_char_array_4);
      out.print(clfbean.getIc_seq());
      out.write(_jspx_char_array_5);
      out.print(clfbean.getIc_seq());
      out.write('\'');
      out.write(',');
      out.print(clfbean.getIc_type());
      out.write(',');
      out.print(clfbean.getIc_code());
      out.write(',');
      out.print(clfbean.getIc_ptype());
      out.write(',');
      out.print(clfbean.getIc_pcode());
      out.write(',');
      out.write(' ');
      out.print(clfbean.getChildCnt());
      out.write(_jspx_char_array_14);
      out.print(clfbean.getIc_name());
      out.write(_jspx_char_array_15);
		
			}	
		out.println("</ul> \r\n");
		
		}else if(level == 6){
			
		out.println("<ul> \r\n");
			for(int i=0 ; i<arrData.size(); i++){
				clfbean = (clfBean)arrData.get(i);			
			
      out.write(_jspx_char_array_0);
      out.print(clfbean.getIc_seq());
      out.write(_jspx_char_array_1);
      out.print(clfbean.getIc_name());
      out.write(_jspx_char_array_13);
      out.print(clfbean.getIc_seq());
      out.write(_jspx_char_array_16);
      out.print(clfbean.getIc_seq());
      out.write(_jspx_char_array_4);
      out.print(clfbean.getIc_seq());
      out.write(_jspx_char_array_5);
      out.print(clfbean.getIc_seq());
      out.write('\'');
      out.write(',');
      out.print(clfbean.getIc_type());
      out.write(',');
      out.print(clfbean.getIc_code());
      out.write(',');
      out.print(clfbean.getIc_ptype());
      out.write(',');
      out.print(clfbean.getIc_pcode());
      out.write(',');
      out.write(' ');
      out.print(clfbean.getChildCnt());
      out.write(_jspx_char_array_17);
      out.print(clfbean.getIc_name());
      out.write(_jspx_char_array_15);
		
			}	
		out.println("</ul> \r\n");
		
		}
	}if(queryId.equals("KEYWORD")){
	
		String level = pr.getString("level");	
		String xp = pr.getString("xp");
		String yp = pr.getString("yp");
		
		arrTreeData = treeDao.getKeywordTreeData(queryId,level,xp,yp);
		
		if(level.equals("1")){

      out.write(_jspx_char_array_18);

			for(int i=0;i<arrTreeData.size();i++)
			{
				treeBean = new TreeBean();
				treeBean = (TreeBean)arrTreeData.get(i);

      out.write(_jspx_char_array_0);
      out.print(treeBean.getSeq());
      out.write(_jspx_char_array_1);
      out.print(treeBean.getName());
      out.write(_jspx_char_array_2);
      out.print(treeBean.getSeq());
      out.write(_jspx_char_array_19);
      out.print(treeBean.getSeq());
      out.write(_jspx_char_array_5);
      out.print(treeBean.getSeq());
      out.write('\'');
      out.write(',');
      out.write('\'');
      out.print(treeBean.getValue1());
      out.write('\'');
      out.write(',');
      out.write('\'');
      out.print(treeBean.getValue2());
      out.write('\'');
      out.write(',');
      out.write('\'');
      out.print(treeBean.getValue3());
      out.write('\'');
      out.write(',');
      out.print(treeBean.getChildCount());
      out.write(_jspx_char_array_20);
      out.print(su.cutString(treeBean.getName(),12,"..."));
      out.write(_jspx_char_array_7);

			}

      out.write(_jspx_char_array_21);

		}else if(level.equals("2")){

      out.write(_jspx_char_array_18);

			for(int i=0;i<arrTreeData.size();i++)
			{
				treeBean = new TreeBean();
				treeBean = (TreeBean)arrTreeData.get(i);

      out.write(_jspx_char_array_0);
      out.print(treeBean.getSeq());
      out.write(_jspx_char_array_1);
      out.print(treeBean.getName());
      out.write(_jspx_char_array_2);
      out.print(treeBean.getSeq());
      out.write(_jspx_char_array_22);
      out.print(treeBean.getSeq());
      out.write(_jspx_char_array_5);
      out.print(treeBean.getSeq());
      out.write('\'');
      out.write(',');
      out.write('\'');
      out.print(treeBean.getValue1());
      out.write('\'');
      out.write(',');
      out.write('\'');
      out.print(treeBean.getValue2());
      out.write('\'');
      out.write(',');
      out.write('\'');
      out.print(treeBean.getValue3());
      out.write('\'');
      out.write(',');
      out.print(treeBean.getChildCount());
      out.write(_jspx_char_array_20);
      out.print(su.cutString(treeBean.getName(),10,"..."));
      out.write(_jspx_char_array_7);

			}

      out.write(_jspx_char_array_21);

		}else if(level.equals("3")){

      out.write(_jspx_char_array_18);

			for(int i=0;i<arrTreeData.size();i++)
			{
				treeBean = new TreeBean();
				treeBean = (TreeBean)arrTreeData.get(i);
				
				if(treeBean.getType().equals("1")){
					typeOfclass = "fileA";	
				}else if(treeBean.getType().equals("2")){
					typeOfclass = "fileN";	
				}else if(treeBean.getType().equals("3")){
					typeOfclass = "fileP";	
				}else if(treeBean.getType().equals("4")){
					typeOfclass = "fileI";	
				}else if(treeBean.getType().equals("6")){
					typeOfclass = "fileP2";	
				}else if(treeBean.getType().equals("7")){
					typeOfclass = "fileP3";	
				}			
				
			

      out.write(_jspx_char_array_0);
      out.print(treeBean.getSeq());
      out.write(_jspx_char_array_1);
      out.print(treeBean.getName());
      out.write(_jspx_char_array_2);
      out.print(treeBean.getSeq());
      out.write(_jspx_char_array_23);
      out.print(typeOfclass);
      out.write(_jspx_char_array_24);
      out.print(treeBean.getSeq());
      out.write(_jspx_char_array_5);
      out.print(treeBean.getSeq());
      out.write('\'');
      out.write(',');
      out.write('\'');
      out.print(treeBean.getValue1());
      out.write('\'');
      out.write(',');
      out.write('\'');
      out.print(treeBean.getValue2());
      out.write('\'');
      out.write(',');
      out.write('\'');
      out.print(treeBean.getValue3());
      out.write(_jspx_char_array_25);
      out.print(su.cutString(treeBean.getName(),9,"..."));
      out.write(_jspx_char_array_7);

			}

      out.write(_jspx_char_array_21);

		}
	}else if(queryId.equals("SEARCHKEYWORD")){
		
		String level = pr.getString("level");	
		String xp = pr.getString("xp");
		String yp = pr.getString("yp");
		String fromDate =  pr.getString("fromDate");
		String toDate = pr.getString("toDate");
	
		treeDao.getMaxMinNo(fromDate,toDate);
		arrTreeData = treeDao.getKeywordTreeData(queryId,level,xp,yp,fromDate,toDate);
				
		if(level.equals("1")){

      out.write(_jspx_char_array_26);

			for(int i=0;i<arrTreeData.size();i++)
			{
				treeBean = new TreeBean();
				treeBean = (TreeBean)arrTreeData.get(i);

      out.write(_jspx_char_array_0);
      out.print(treeBean.getSeq());
      out.write(_jspx_char_array_1);
      out.print(treeBean.getName());
      out.write(_jspx_char_array_13);
      out.print(treeBean.getSeq());
      out.write(_jspx_char_array_19);
      out.print(treeBean.getSeq());
      out.write(_jspx_char_array_5);
      out.print(treeBean.getSeq());
      out.write('\'');
      out.write(',');
      out.write('\'');
      out.print(treeBean.getValue1());
      out.write('\'');
      out.write(',');
      out.write('\'');
      out.print(treeBean.getValue2());
      out.write('\'');
      out.write(',');
      out.write('\'');
      out.print(treeBean.getValue3());
      out.write('\'');
      out.write(',');
      out.print(treeBean.getChildCount());
      out.write(_jspx_char_array_20);
      out.print(su.cutString(treeBean.getName(),10,"..."));
      out.write(_jspx_char_array_27);
      out.print(treeBean.getValue4());
      out.write(_jspx_char_array_28);

			}

      out.write(_jspx_char_array_21);

		}else if(level.equals("2")){

      out.write(_jspx_char_array_18);

			for(int i=0;i<arrTreeData.size();i++)
			{
				treeBean = new TreeBean();
				treeBean = (TreeBean)arrTreeData.get(i);

      out.write(_jspx_char_array_0);
      out.print(treeBean.getSeq());
      out.write(_jspx_char_array_1);
      out.print(treeBean.getName());
      out.write(_jspx_char_array_13);
      out.print(treeBean.getSeq());
      out.write(_jspx_char_array_22);
      out.print(treeBean.getSeq());
      out.write(_jspx_char_array_5);
      out.print(treeBean.getSeq());
      out.write('\'');
      out.write(',');
      out.write('\'');
      out.print(treeBean.getValue1());
      out.write('\'');
      out.write(',');
      out.write('\'');
      out.print(treeBean.getValue2());
      out.write('\'');
      out.write(',');
      out.write('\'');
      out.print(treeBean.getValue3());
      out.write('\'');
      out.write(',');
      out.print(treeBean.getChildCount());
      out.write(_jspx_char_array_20);
      out.print(su.cutString(treeBean.getName(),8,"..."));
      out.write(_jspx_char_array_27);
      out.print(treeBean.getValue4());
      out.write(_jspx_char_array_28);

			}

      out.write(_jspx_char_array_21);

		}else if(level.equals("3")){

      out.write(_jspx_char_array_18);

			for(int i=0;i<arrTreeData.size();i++)
			{
				treeBean = new TreeBean();
				treeBean = (TreeBean)arrTreeData.get(i);
				
				if(treeBean.getType().equals("1")){
					typeOfclass = "fileA";	
				}else if(treeBean.getType().equals("2")){
					typeOfclass = "fileN";	
				}else if(treeBean.getType().equals("3")){
					typeOfclass = "fileP";	
				}else if(treeBean.getType().equals("4")){
					typeOfclass = "fileI";	
				}else if(treeBean.getType().equals("6")){
					typeOfclass = "fileP2";	
				}else if(treeBean.getType().equals("7")){
					typeOfclass = "fileP3";	
				}	

      out.write(_jspx_char_array_0);
      out.print(treeBean.getSeq());
      out.write(_jspx_char_array_1);
      out.print(treeBean.getName());
      out.write(_jspx_char_array_13);
      out.print(treeBean.getSeq());
      out.write(_jspx_char_array_23);
      out.print(typeOfclass);
      out.write(_jspx_char_array_24);
      out.print(treeBean.getSeq());
      out.write(_jspx_char_array_5);
      out.print(treeBean.getSeq());
      out.write('\'');
      out.write(',');
      out.write('\'');
      out.print(treeBean.getValue1());
      out.write('\'');
      out.write(',');
      out.write('\'');
      out.print(treeBean.getValue2());
      out.write('\'');
      out.write(',');
      out.write('\'');
      out.print(treeBean.getValue3());
      out.write(_jspx_char_array_25);
      out.print(su.cutString(treeBean.getName(),6,"..."));
      out.write(_jspx_char_array_27);
      out.print(treeBean.getValue4());
      out.write(_jspx_char_array_28);

			}

      out.write(_jspx_char_array_21);

		}
	}
	}catch(Exception e){
		e.printStackTrace();
	}

    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
  static char[] _jspx_char_array_0 = "<li id=\"item".toCharArray();
  static char[] _jspx_char_array_1 = "\" title=\"".toCharArray();
  static char[] _jspx_char_array_2 = "\"><p id=\"img".toCharArray();
  static char[] _jspx_char_array_3 = "\" class=\"closedFolder\" onclick=\"clickItem(".toCharArray();
  static char[] _jspx_char_array_4 = ", 'item".toCharArray();
  static char[] _jspx_char_array_5 = "','img".toCharArray();
  static char[] _jspx_char_array_6 = ",2)\">".toCharArray();
  static char[] _jspx_char_array_7 = "</p></li>\r\n".toCharArray();
  static char[] _jspx_char_array_8 = ",3)\">".toCharArray();
  static char[] _jspx_char_array_9 = "\">\r\n					<p id=\"img".toCharArray();
  static char[] _jspx_char_array_10 = ",4)\">".toCharArray();
  static char[] _jspx_char_array_11 = "</p></li>\r\n				".toCharArray();
  static char[] _jspx_char_array_12 = ",5)\">".toCharArray();
  static char[] _jspx_char_array_13 = "\">\r\n				<p id=\"img".toCharArray();
  static char[] _jspx_char_array_14 = ",6)\">".toCharArray();
  static char[] _jspx_char_array_15 = "</p></li>\r\n			".toCharArray();
  static char[] _jspx_char_array_16 = "\" class=\"leaf\" onclick=\"clickItem(".toCharArray();
  static char[] _jspx_char_array_17 = ",7)\">".toCharArray();
  static char[] _jspx_char_array_18 = "<ul>\r\n".toCharArray();
  static char[] _jspx_char_array_19 = "\" class=\"closedFolder\" onclick=\"clickItem('2','item".toCharArray();
  static char[] _jspx_char_array_20 = ");\">".toCharArray();
  static char[] _jspx_char_array_21 = "</ul>	\r\n".toCharArray();
  static char[] _jspx_char_array_22 = "\" class=\"closedFolder\" onclick=\"clickItem('3','item".toCharArray();
  static char[] _jspx_char_array_23 = "\" class=\"".toCharArray();
  static char[] _jspx_char_array_24 = "\" onclick=\"clickKeyword('item".toCharArray();
  static char[] _jspx_char_array_25 = "');\">".toCharArray();
  static char[] _jspx_char_array_26 = "<ul class=\"top\">\r\n".toCharArray();
  static char[] _jspx_char_array_27 = "&nbsp;&nbsp;<font color=\"0078FF\">[".toCharArray();
  static char[] _jspx_char_array_28 = "]</font></p>\r\n			</li>\r\n".toCharArray();
}
