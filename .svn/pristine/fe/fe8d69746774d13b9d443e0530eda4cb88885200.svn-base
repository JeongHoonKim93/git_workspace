@charset "utf-8";

/* Design Component */
.dcp {
	@include inlineBlock();
	position: relative;
	color: inherit;

	// Checkbox
	> input[type=checkbox]{
		@include customComponent();

		&+ label {
			@include inlineBlock();
			position: relative;
			min-height: 26px;
			padding:0 15px 0 25px;
			line-height: 26px;
			@include overUnderline( $font_color, $font_color, $font_color );

			&:before {
				content: '';
				position: absolute;
				top: 50%;
				left: 0;
				width: 20px;
				height: 20px;
				margin: -10px 0 0 0;
				border: 1px solid $component_brd_color;
				box-sizing: border-box;
				background-color: #ffffff;
				background-image: url(#{$ui_img_path}ui_component.png);
				background-repeat: no-repeat;
				background-position: 4px -10px;
				font-size: 1px;
				line-height: 1px;
				@include transition();
			}

			&:empty {
				display: block;
				width: 20px;
				height: 20px;
				padding: 0;
				margin: 0 auto;
				font-size: 1px;
				line-height: 1px;
			}
		}

		&:hover + label {
			//text-decoration: underline;

			&:before {
				border: 1px solid $point_color;
			}
		}

		&:checked + label {
			&:before {
				border: 1px solid $point_color;
				background-color: $point_color;
				background-position: 4px 5px;
			}
		}
	}

	// Radio
	> input[type=radio]{
		@include customComponent();

		&+ label {
			@include inlineBlock();
			position: relative;
			min-height: 26px;
			padding:0 15px 0 25px;
			line-height: 26px;
			@include overUnderline( $font_color, $font_color, $font_color );

			&:before {
				content: '';
				position: absolute;
				top: 50%;
				left: 0;
				width: 20px;
				height: 20px;
				margin: -10px 0 0 0;
				border: 1px solid $component_brd_color;
				border-radius: 50%;
				box-sizing: border-box;
				background-color: #ffffff;
				@include textHidden();
				@include transition();
			}
			&:after {
				content: '';
				position: absolute;
				top: 50%;
				left: 10px;
				width: 0;
				height: 0;
				border-radius: 50%;
				box-sizing: border-box;
				background-color: $point_color;
				overflow: hidden;
				@include textHidden();
				@include transition();
			}

			&:empty {
				display: block;
				width: 20px;
				height: 20px;
				padding: 0;
				font-size: 1px;
				line-height: 1px;
			}
		}

		&:hover + label {
			&:before {
				border: 1px solid $point_color;
			}
		}

		&:checked + label {
			&:before {
				border: 1px solid $point_color;
			}
			&:after {
				width: 10px;
				height: 10px;
				left: 5px;
				margin: -5px 0 0 0;
			}
		}
	}

	// Select
	> select {
		@include customComponent();
		position: relative;
		width: auto;
		height: 26px;
		padding: 0 30px 0 0;

		&+ label {
			display: block;
			position: absolute;
			top: 0;
			left: 0;
			width: 100%;
			height: 100%;
			padding: 0 25px 0 5px;
			border: 1px solid $component_brd_color;
			box-sizing: border-box;
			background-color: #ffffff;
			color: #333333;
			line-height: 24px;
			z-index: 0;
			overflow: hidden;
			text-overflow: ellipsis;
			white-space: nowrap;
			z-index: 0;
			@include transition();

			&:after {
				content: '';
				position: absolute;
				top: 0;
				right: 1px;
				width: 20px;
				height: 100%;
				background: url(#{$ui_img_path}ui_component.png) no-repeat right -43px;
				@include transition( .12 );
			}
		}

		&:hover {
			&+ label {
				border :1px solid $point_color;

				&:after{
					background-position:right -18px;
				}
			}
		}
	}

	// Small Size Component
	&.small {
		vertical-align: top;

		> input[type=checkbox]{
			&+ label {
				min-height: 20px;
				line-height: 20px;
			}
		}

		> select{
			height: 22px;

			&+ label {
				min-height: 20px;
				line-height: 20px !important;

				&:after {
					margin-top: -3px;
				}
			}
		}
	}

	// Big Size Component
	&.big {
		vertical-align: top;

		> input[type=checkbox]{
			&+ label {
				min-height: 30px;
				line-height: 30px;
			}
		}

		> select{
			height: 32px;

			&+ label {
				min-height: 30px;
				line-height: 30px;

				&:after {
					margin-top: 3px;
				}
			}
		}
	}
}

// 자동완성 Input
.dcp_ac {
	@include inlineBlock();
	position: relative;

	> input {
		padding-right: 40px;
		background: url(../img/ui/ui_component.png) no-repeat right -170px;
		box-sizing: border-box;

		&:hover, &:focus {
			background-position: right -204px;
		}
	}

	> .list_wrap {
		display: none;
		position: absolute;
		min-width: 100%;
		max-height: 400px;
		border: 1px solid $point_color;
		background: #ffffff;
		box-sizing: border-box;
		overflow: auto;
		z-index: 1;

		li {
			.item {
				display: block;
				position: relative;
				line-height: 20px;
				height: 30px;
				min-height: auto;
				padding: 0 5px 0;
				box-sizing: border-box;
				line-height: 30px;
				@include transition();

				.highlight {
					color: red;
				}

				&:hover, &.active {
					background: $over_bg_color;
				}

				&:after {
					content: '';
					position: absolute;
					top: 0;
					left: 0;
					width: 100%;
					height: 100%;
				}
			}
		}

		&.active {
			display: block;
		}
	}

	.ui-autocomplete {
		position: absolute;
		border: 1px solid $point_color;
		background: #ffffff;
		z-index: 1;

		.ui-menu-item {
			> .ui-menu-item-wrapper {
				display: block;
				padding: 5px;
				line-height: 1.2em;

				&.ui-state-active {
					background: #f0f0f0;
				}
			}
		}
	}

	&.small {
		input {
			height: 22px;
			line-height: 20px;
			background-position: right -172px;

			&:hover, &:focus {
				background-position: right -206px;
			}
		}
	}
	&.big {
		input {
			height: 32px;
			line-height: 30px;

			background-position: right -167px;

			&:hover, &:focus {
				background-position: right -201px;
			}
		}
	}
}

// 자동완성 Select
.dcp_autocomplete_select {
	@include inlineBlock();
	position: relative;

	> select {
		display: none;
	}

	> .input {
		position: relative;
		overflow: hidden;

		input {
			height: 26px;
			padding: 0 40px 0 5px;
			border: 1px solid $component_brd_color;
			box-sizing: border-box;
			background: #ffffff;
			color: #333333;
			line-height: 24px;
			outline: none;
			@include transition();

			&:focus {
				border: 1px solid $point_color;
			}
		}
		.btn_expand {
			position: absolute;
			top: 0;
			right: 0;
			width: 40px;
			height: 100%;
			background: url(#{$ui_img_path}ui_component.png) no-repeat right -237px;
			@include textHidden();

			&:hover {
				background-position: right -271px;
			}
		}

		&.readonly {
			cursor: pointer;

			> * {
				pointer-events: none;
			}
		}
		&:hover, &.active {
			input {
				@extend :focus;
			}
		}

		&.active {
			.btn_expand {
				@extend :hover;
			}
		}
	}

	> .lists {
		display: none;
		position: absolute;
		min-width: 100%;
		max-height: 400px;
		border: 1px solid $point_color;
		background: #ffffff;
		box-sizing: border-box;
		overflow: auto;
		z-index: 1;

		.label {
			display: block;
			padding: 7px 5px 2px;
		}

		li {
			.item {
				display: block;
				position: relative;
				line-height: 20px;
				height: 30px;
				min-height: auto;
				padding: 0 5px 0;
				box-sizing: border-box;
				line-height: 30px;
				@include transition();

				.highlight {
					color: red;
				}

				&:hover, &.active {
					background: $over_bg_color;
				}

				&:after {
					content: '';
					position: absolute;
					top: 0;
					left: 0;
					width: 100%;
					height: 100%;
				}
			}
		}

		&.active {
			display: block;
		}
	}
	
	&[data-fixed="true"] {
		> .lists {
			position: fixed !important;
		}
	}
	&.small {
		> .input {
			line-height: 22px;

			input {
				height: 22px;
				line-height: 20px;
			}

			.btn_expand {
				margin-top: -2px;
			}
		}
	}

	&.big {
		> .input {
			line-height: 32px;

			input {
				height: 32px;
				line-height: 30px;
			}

			.btn_expand {
				margin-top: 3px;
			}
		}
	}
}

// 셀렉트박스 - 커스텀(체크박스/자동완성)
.dcp_custom_select {
	@include inlineBlock();
	position: relative;

	> select {
		display: none;
	}

	> .input {
		position: relative;
		overflow: hidden;

		input {
			width: 100%;
			height: 26px;
			padding: 0 40px 0 5px;
			border: 1px solid $component_brd_color;
			box-sizing: border-box;
			background: #ffffff;
			color: #333333;
			line-height: 24px;
			outline: none;
			overflow: hidden;
			text-overflow: ellipsis;
			white-space: nowrap;
			@include transition();

			&:focus {
				
			}
		}
		.btn_expand {
			position: absolute;
			top: 0;
			right: 0;
			width: 40px;
			height: 100%;
			background: url(#{$ui_img_path}ui_component.png) no-repeat right -305px;
			@include textHidden();

			&:hover {
				background-position: right -339px;
			}
		}

		&.readonly {
			cursor: pointer;

			> * {
				pointer-events: none;
			}
		}
		&:hover, &.active {
			input {
				border: 1px solid $point_color;
			}
		}

		&.active {
			.btn_expand {
				@extend :hover;
			}
		}
	}

	> .lists {
		display: none;
		position: absolute;
		min-width: 100%;
		max-height: 400px;
		border: 1px solid $point_color;
		background: #ffffff;
		box-sizing: border-box;
		overflow: auto;
		z-index: 1;

		> .all_wrap {
			position: relative;
			padding: 5px;
			border-bottom: 1px solid $point_color;
			@include clearBoth();

			> *:first-child {
				float: left;
				line-height: 22px;
			}
			> *:last-child {
				float: right;
			}
		}

		.chk_list {
			border-bottom: 1px solid $point_color;
			background: lighten( $point_color, 65% );

			&:empty {
				display: none;
			}

			.item {
				display: block;
				position: relative;
				line-height: 30px;
				padding: 0 5px;
				background: $point_color;
				color: #ffffff;
				white-space: nowrap;

				&:before {
					content: '';
					position: absolute;
					top: 0;
					left: 0;
					width: 100%;
					height: 100%;
				}

				&:after {
					content: '';
					position: absolute;
					top: 50%;
					right: 10px;
					width: 8px;
					height: 8px;
					margin: -4px 0 0 -4px;
					background: url(../img/ui/ui_btns_icon.png) no-repeat -198px -81px;
				}

				&:hover {
					background: lighten( $point_color, 10% );
				}
			}
		}

		.use_list {
			.item {
				display: block;
				position: relative;
				line-height: 30px;
				padding: 0 5px;
				white-space: nowrap;

				&:before {
					content: '';
					position: absolute;
					top: 0;
					left: 0;
					width: 100%;
					height: 100%;
				}

				&:after {
					content: '';
					position: absolute;
					top: 50%;
					right: 5px;
					width: 8px;
					height: 8px;
					margin: -4px 0 0 -4px;
					border-radius: 50%;
					background: $point_color;
					@include transition();
					@include opacity( 0 );
				}

				&:hover {
					background: $over_bg_color;
				}

				&.active {
					color: $point_color;
					background: $point_active_color;

					&:after {
						right: 10px;
						@include opacity( 1 );
					}
				}

				.highlight {
					color: red;
				}
			}
		}

		&.active {
			display: block;
		}
	}

	&[data-fixed="true"] {
		> .lists {
			position: fixed !important;
		}
	}

	&.small {
		> .input {
			line-height: 22px;

			input {
				height: 22px;
				line-height: 20px;
			}

			.btn_expand {
				margin-top: -2px;
			}
		}
	}

	&.big {
		> .input {
			line-height: 32px;

			input {
				height: 32px;
				line-height: 30px;
			}

			.btn_expand {
				margin-top: 3px;
			}
		}
	}
}

// 토글 스위치
.dcp_switch {
	@include inlineBlock();
	position: relative;

	$datas: ( ( class: ".small", wid : 44px, hgt: 22px ), ( class: "", wid : 50px, hgt: 26px ), ( class: ".big", wid : 60px, hgt: 32px ) );

	@each $map in $datas {
		&#{map-get($map, class)} {
			> input {
				@include customComponent();

				&+ label {
					display: block;
					position: relative;
					width: map-get($map, wid);
					height: map-get($map, hgt);
					border-radius: 100px;
					background: #d3d3d3;
					overflow: hidden;
					@include transition();

					.wrap {
						position: absolute;
						top: 2px;
						right: 2px;
						bottom: 2px;
						left: 2px;

						.anchor {
							position: absolute;
							left: map-get($map, wid) - map-get($map, hgt);
							width: map-get($map, hgt) - 4px;
							height: map-get($map, hgt) - 4px;
							border-radius: 100px;
							background: #ffffff;
							overflow: hidden;
							@include transition();

							&:before {
								content: '';
								position: absolute;
								width: 100%;
								height: 100%;
								background-color: #d3d3d3;
								background-image: url(../img/ui/ui_switch.png);
								background-repeat: no-repeat;
								background-position: ( map-get($map, hgt) / 2 ) - 16 center;
								@include transition( 0.33 );
							}
						}
					}
				}

				&:checked {
					&+ label {
						background: $point_color;

						.wrap {
							.anchor {
								left: 0;

								&:before {
									background-color: $point_color;
									background-position: ( -22px + ( map-get($map, hgt) / 2 ) - 15 ) center;
								}
							}
						}
					}	
				}
			}
		}

	}
}