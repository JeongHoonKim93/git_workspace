/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.46
 * Generated at: 2022-04-08 05:47:08 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.riskv3.admin.ex_005fsite;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.ArrayList;
import risk.admin.ex_site.ExSiteMng;
import risk.util.ParseRequest;

public final class popUpContents_005fex_005fsite_005fInsertUpdate_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("risk.admin.ex_site.ExSiteMng");
    _jspx_imports_classes.add("risk.util.ParseRequest");
    _jspx_imports_classes.add("java.util.ArrayList");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

 
	System.out.println("■-------------popUpContents_ex_site_InsertUpdate.jsp----------------■");
	ParseRequest pr = new ParseRequest(request);
	pr.printParams();
	String mode = pr.getString("mode");
	String s_site = pr.getString("S_SITE");
	String s_seq = pr.getString("s_seq","");
	String ex_seq = pr.getString("ex_seq","");
	String ekSeq = pr.getString("ekSeq","");
	String ex_url = pr.getString("ex_url","");
	String siteURL = pr.getString("siteURL","");
	
	int result = 0;
	String Scripture  = "";
	
	ExSiteMng eSMng = new ExSiteMng();
			
	if(s_seq.equals("")){
		s_seq = s_site;
	}
	if(mode.equals("insert")){
		//textArea의 있는 값과, s_seq, sg_seq, S_SITE번호 까지 해서 getSiteList에서 받아오낟.
		//그리고 textArea값과 getSiteList를 넘긴다. insert한다.
		result = eSMng.insertExSite(s_seq, ex_url);
		if(result > -1){
			Scripture = "alert('저장하였습니다.'); opener.loadList(); window.close();";
			//System.out.println(Scripture);
		}else{
			Scripture = "alert('실패하였습니다.'); opener.loadList(); window.close();";
		}
		System.out.println(result);
	}else if(mode.equals("update")){
		
		result = eSMng.updateExSite(ekSeq, ex_url);
		
		if(result > 0){
			Scripture = "alert('수정하였습니다.'); opener.loadList(); window.close();";
			//System.out.println(Scripture);
		}else{
			Scripture = "alert('수정에 실패하였습니다.'); opener.loadList(); window.close();";
		}
		
	}else if(mode.equals("delete")){
		String checkIds = pr.getString("checkIds");
		result = eSMng.deleteExSite(checkIds);
		if(result > -1){
			Scripture = "alert('삭제하였습니다.');parent.loadList();window.close();";
			//System.out.println(Scripture);
		}else{
			Scripture = "alert('실패하였습니다.');parent.loadList();window.close();";
		}	
	}
	
	//popup.openByPost('managerForm','admin_ex_site_edit.jsp',400,270,false,false,false,'trendPop');

      out.write(_jspx_char_array_0);
      out.print(Scripture);
      out.write(_jspx_char_array_1);
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
  static char[] _jspx_char_array_0 = "<script type=\"text/javascript\">\r\n	\r\n	".toCharArray();
  static char[] _jspx_char_array_1 = "</script>\r\n".toCharArray();
}
